tx_name,Task Name,tx_difficulty,total_correctness,total_compute,total_robustness,total_memtotal,made_submission,compile_success,score_percentage,Time spent,Remarks on Score,id_task_session,js_comments,id_infra_instan,nu_pgmr_comment_flux_all,nu_pgmr_cyclo_flux_all,nu_pgmr_filesize_flux_all,nu_pgmr_nom_flux_all,nu_pgmr_dac_flux_all,nu_pgmr_fanout_flux_all,nu_loc_flux_source_all,nu_loc_added_source_all,nu_ce_models_units_all,nu_aberrant_ce_units_all,nu_ce_hours_all,nu_aberrant_ce_all,loc_submit,cyclo_submit,nom_submit,dac_submit,fanout_submit,ce_units_submit,aberrant_ce_units_submit,id_test_session,tx_file_type,correctness_norm,compute_norm,robustness_norm,memtotal_norm,task_score,avg_bce
0,15,intermediate,0,0,0,0,True,True,70.7,0.95,FAILED,3837,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""nop""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":"".""},{""question"":""Describe why a builder interface is appropriate."",""answer"":"".""}]",837384,0,10,1622,8,2,2,55,44,70.67056659086927,3.3603286788694304,3.982103419602944,0.1893458191807489,42,8,6,2,2,6.541836768847178,0.02967029645001911,0,java,0,0,0,0,0,3.624516342412452
1,1,easy,2,0,0,0,True,True,68.8,0,FAILED,3398,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""test""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""test""}]",805758,0,0,182,0,0,0,2,2,8.274675626355489,0,0.4662565435278765,0,10,2,2,0,0,8.274675626355489,0,3511,java,0,0,0,0,0,0.8999421906693712
2,12,easy,8,0,0,0,True,True,69.19999999999999,1,FAILED,3500,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""3rd point to calculate percintile was not very clear""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""1st was to calculate minimum, so pick up th mini from list. same mean calcluated as avg as per example.""}]",813135,0,10,93,10,3,3,111,100,176.1191232417409,1.5142117246275109,9.923856518351744,0.08532190949522027,16,2,2,1,1,16.994948088507382,0.2518846479893286,4427,java,3.125,0,0,0,0.390625,1.6656433378196498
2,3,intermediate,5,0,0,0,True,True,66.90000000000002,0.8,FAILED,3499,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""Tried to use bytes instead of long as we are using bytestreams for both i/o operations, but without debugging its difficult to find out the cause""},{""question"":""Describe the faults you found in words."",""answer"":""Issue is with streams only we are passing long numbers to byte stream even though we are converting but size of byte stream is smaller to hold the values thats why when size is increasing its failing and working for small input""}]",813134,4,40,172,24,11,19,170,162,220.07192242848225,11.373190130040452,12.400482932795374,0.6408498119283507,39,10,6,3,5,27.507695261238737,1.2079632053352551,4427,java,4,0,0,0,0.8,1.6656433378196498
2,15,intermediate,0,0,0,0,True,False,67.60000000000001,1,0,3498,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""If i had more time, i wolud iterate the string find out the positon of wildcart, and would have create a new object where i will be putting value of wildcart and in end would have create a newlist of string""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""By spiliting the string,  by string tokens we can do that""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""not sure on that""}]",813133,13,24,2118,10,0,0,841,777,874.9605428342627,16.702945044627356,49.301760799638565,0.9411676994852936,20,0,0,0,0,13.84130742932674,0,4427,java,0,0,0,0,0,1.6656433378196498
3,1,easy,0,0,0,0,True,True,63.2,1,FAILED,3411,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Yes""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Not enough time to do work""}]",807267,0,6,186,4,0,2,250,227,381.6397880713684,0.4676492463049715,21.504413767242823,0.02635082400947341,13,3,2,0,1,13.872810242519288,0.12326945270378878,4183,java,0,0,0,0,0,1.8562937048503607
3,15,intermediate,0,0,0,0,True,False,76.7,0.95,0,3412,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Yes ,  could not think of better option in limited time""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""We can add a or condition along with : for pattern matching""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""To create provide an option to create an""}]",807268,0,57,708,43,2,4,535,492,762.0101044331401,5.551943855109477,42.93729609106109,0.3128376589771313,28,7,5,0,0,14.692640558433439,0.2782080709392986,4183,java,0,0,0,0,0,1.8562937048503607
4,1,easy,2,0,0,0,True,True,63.9,0.8,ACCEPTABLE,3678,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""tested the input value""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""will work for any value which can be auto-boxed to double""}]",834097,0,5,117,4,0,2,24,13,121.00119393986431,2.351792083943516,6.81810393502954,0.13251739375295446,10,3,2,0,0,8.088353297018273,0.14066474560277029,4545,java,37.5,0,0,0,18.75,1.3342956852791878
4,8,easy,1,1,0,1,True,True,69.89999999999999,1,FAILED,3679,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""added short-circuit \u0026\u0026 operator""}]",834098,0,68,125,30,5,10,32,16,239.1165359920118,2.4806169663010937,13.473597589359427,0.13977634227017685,51,12,6,1,2,22.04524599534349,0.39994528568671095,4545,java,100,0,0,0,33.333333333333336,1.3342956852791878
4,15,intermediate,0,0,0,0,True,False,69.8,1,0,3677,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""faced technical issue while taking this question and got submitted""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""""}]",834096,0,29,999,29,4,6,139,74,783.2449202906598,5.267923596406402,44.13382297516556,0.2968338528952348,18,4,4,1,1,19.042600787919735,0.3684905040973296,4545,java,0,0,0,0,0,1.3342956852791878
5,7,easy,1,1,0,0,True,True,67.80000000000001,1,FAILED,3470,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""change the loop from while to do while loop""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""use var type instead of  complex""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""change variable declaration  to var""}]",812399,0,8,310,0,0,0,112,56,380.5628515613817,4.246258286484583,21.443731183729067,0.2392656583754101,50,11,6,0,1,8.009189347486204,0.4658560192293085,4266,cs,100,0,0,0,50,1.3980957809030348
5,10,easy,6,0,0,0,True,True,66.10000000000001,0.6666666666666666,PASSED,3472,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""cross  verified the output""}]",812401,0,11,593,2,0,0,67,42,254.2779408587187,5.973619692453522,14.327903491775933,0.3365980004439366,33,8,3,0,1,9.18640583124165,0.4017669395269799,4266,cs,16.666666666666668,0,0,0,2.7777777777777786,1.3980957809030348
5,2,intermediate,0,0,0,0,True,True,67.80000000000001,1,FAILED,3471,"[{""question"":""the classes you used in the standard library and why"",""answer"":""timezone""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""Google.com""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""we already worked on timezone.""}]",812400,8,1,964,0,0,0,73,40,275.34923608924555,3.864574889267267,15.515216412000706,0.21775878734572304,16,3,2,0,1,6.469069134708277,0,4266,cs,0,0,0,0,0,1.3980957809030348
6,8,easy,1,1,0,1,True,True,78.4,0.95,FAILED,3826,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""Looping""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""choosing correct datatype for the value""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""analyze the datatypes \u0026 iteration""}]",837072,0,44,65,24,4,11,30,15,190.36831812934784,1.3363941845988558,10.726761750695811,0.07530235158912901,51,11,6,1,2,11.624121625163331,0.10558659023323616,4733,java,100,0,0,0,33.333333333333336,2.5944298701298703
6,1,easy,2,0,0,0,True,True,82,0.4,ACCEPTABLE,3827,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""dry run""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",837073,0,6,147,4,0,0,24,14,139.67769099522863,0.9829715435375892,7.870476179629309,0.0553879009850637,12,3,2,0,0,14.910871259866454,0.2823403126710656,4733,java,37.5,0,0,0,18.75,2.5944298701298703
7,1,easy,2,0,0,0,True,True,78.7,0.7,ACCEPTABLE,3174,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""By matching the result manually, that is if the mean of 2,2 is 2.0 ? It has matched.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""1.NULL\n2.Empty array\n3.Array which has some element""}]",731358,0,13,742,4,0,0,30,18,50.893662832979786,2.349497453550743,2.8677261069180746,0.13238809727247364,14,5,2,0,0,13.983124199410527,0.489518394417824,2723,java,37.5,0,0,0,18.75,3.2848484076433127
8,1,easy,2,0,0,0,True,True,46.40000000000001,0.4,FAILED,2874,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""eewqewqe""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""wewqe""}]",645596,0,1,11,0,0,0,1,1,6.324320274899181,0,0.3563590700940281,0,0,1,0,0,0,4.974925401076961,0,2029,py,0,0,0,0,0,0.6867670634920635
8,1,easy,2,0,0,0,True,True,62.2,0,ACCEPTABLE,2943,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""wjsk""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""sk""}]",645027,0,3,295,2,0,0,13,13,20.337491006511087,0.12037088022707675,1.1459649524535642,0.006782587389568049,13,3,2,0,0,20.337491006511087,0.12037088022707675,2339,js,37.5,0,0,0,18.75,0.6867670634920635
9,1,easy,0,0,0,0,True,False,59.4,0.8,0,3842,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""I will add all the array elements and divided by the array size to calculate the average""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""yes array size if it zero w""}]",837389,0,10,43,10,0,0,23,11,133.65565300688291,2.188724089861314,7.531149933595381,0.12332893456566918,7,2,2,0,0,9.365958738019435,0.683547749226785,0,java,0,0,0,0,0,0.4453037914691943
10,8,easy,1,1,0,1,True,True,69.3,1,FAILED,3838,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""Understand and use java8""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""it didnt""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""""}]",837385,10,42,804,20,4,7,52,26,259.4620902320596,8.775953223782803,14.620016884142313,0.4945022380394522,51,11,6,1,2,6.147229660784992,0.18507803029730294,0,java,100,0,0,0,33.333333333333336,0.99800353200883
10,1,easy,2,0,0,0,True,True,73,0.9,ACCEPTABLE,3839,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""used calculator to calculate it""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""no problematic inputs given""}]",837386,0,6,230,4,0,0,34,21,185.35856156780892,0.7718500612959066,10.444474941668588,0.04349175217882411,16,3,2,0,0,11.036407593074076,0,0,java,37.5,0,0,0,18.75,0.99800353200883
10,15,intermediate,0,0,0,0,True,False,69,0.95,0,3840,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Code could have been completed""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""will first check for all the (.) and replace it with ascii and then form the word again and match with builder.""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""easily built""}]",837387,3,27,967,12,0,0,88,52,497.16805295627233,6.750249624543763,28.014132322667713,0.38035908596411583,25,0,0,0,0,12.391031244252437,0,0,java,0,0,0,0,0,0.99800353200883
11,1,easy,2,0,0,0,True,True,65.40000000000002,1,ACCEPTABLE,3506,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""I made a little bit of defensive programming. I can\u0027t add ArgumentException in order to check whether the array is null.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""if the array would be empty, probable it can raise a DividedByZeroException.""}]",813141,0,3,488,0,0,2,55,30,223.4329422129253,2.337585223684308,12.589867693985527,0.13171687396729131,13,3,2,0,0,0.5849814746964918,0,4363,cs,37.5,0,0,0,18.75,3.1291436435124518
11,15,intermediate,0,0,0,0,True,False,68.10000000000001,0.95,0,3505,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Probably I will implemented the miss logic""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""add a property called wildcard ans use it in the algorithm""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""In order to add words and preserve the visibility of them.""}]",813140,0,9,1230,8,0,6,176,98,658.9970399603801,13.576885800433145,37.132776669622714,0.7650223562867076,30,7,6,0,2,5.555332014367954,0.5099572502218015,4363,cs,0,0,0,0,0,3.1291436435124518
11,3,intermediate,5,0,0,0,True,True,67.40000000000002,1,FAILED,3504,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""i would be split the logic in methods applying Single responsibility principle.""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""I didn\u0027t fixes. I don\u0027t very familiarized with this kind of algorithms""},{""question"":""Describe the faults you found in words."",""answer"":""The code is very unreadable, becuse all logic is""}]",813139,2,0,663,0,0,2,49,27,195.94939534511278,2.690890268999784,11.041240999102412,0.1516246983556061,52,11,7,0,2,1.7442635944060128,0,4363,cs,8,0,0,0,1.6,3.1291436435124518
12,1,easy,2,0,0,0,True,True,69.69999999999999,0.55,ACCEPTABLE,3417,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""mean can be calculated by adding the given two number and then dividing the answer by two""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",808026,0,4,128,2,0,0,23,19,53.603340528612144,0.5767542786733362,3.0204094281126945,0.03249861004612998,12,3,2,0,0,14.669729228459131,0.27777424034979664,4144,java,37.5,0,0,0,18.75,1.4892453738910012
13,1,easy,0,0,0,0,True,False,54.2,1,0,3775,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""here i faced to uysed both Sum and avaerage functionality to be used""}]",834368,0,2,307,1,0,0,56,33,205.50792568488384,1.5782805637729331,11.57983943107393,0.08893202266903963,18,4,3,0,0,6.169103101756537,0,4477,cs,0,0,0,0,0,2.00236987654321
13,3,intermediate,5,0,0,0,True,True,69.39999999999999,0.95,FAILED,3773,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""Added different testcase values""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""""},{""question"":""Describe the faults you found in words."",""answer"":""""}]",834366,0,0,69,0,0,0,18,10,71.09191513792318,0.06880718814858175,4.005845319109449,0.0038771068697662243,49,11,7,0,2,7.738284101400622,0,4477,cs,4,0,0,0,0.8,2.00236987654321
13,15,intermediate,0,0,0,0,True,True,57.49999999999999,1,FAILED,3774,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""BUilder interface is the right one to matching the appropriate value from the list""}]",834367,0,0,4,0,0,0,0,0,1.7205273369507652,0,0.09694725997678913,0,10,2,2,0,0,1.1333556424303173,0,4477,cs,0,0,0,0,0,2.00236987654321
14,12,easy,0,0,0,0,True,False,70.89999999999998,0.9333333333333332,0,3385,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""..""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""..""}]",779511,0,2,658,1,0,2,62,38,215.08521815870685,0.4308850947231488,12.119495060713035,0.024279259271916997,31,4,3,0,1,5.792149529435878,0,3340,cs,0,0,0,0,0,0.4318592082616179
14,3,intermediate,5,0,0,0,True,True,70.39999999999998,0.95,FAILED,3383,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":"".""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":"".""},{""question"":""Describe the faults you found in words."",""answer"":"".""}]",779510,2,0,119,0,0,0,6,4,37.417001081589646,0.8150512263032551,2.108351116255746,0.0459260259536833,49,11,7,0,2,6.784742590366055,0,3340,cs,4,0,0,0,0.8,0.4318592082616179
15,1,easy,2,0,0,0,True,True,72.89999999999998,1,ACCEPTABLE,3643,0,834101,0,10,182,6,0,0,32,20,180.50898185315341,0.4686401655329031,10.171213683170873,0.02640665974189283,16,4,2,0,0,9.343092329351167,0.1760985846210661,4539,java,37.5,0,0,0,18.75,1.4802463095238094
16,14,difficult,0,0,0,0,True,False,68.5,0.9,0,3744,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""Because Change should be tracked of all of the money present in machine""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""Return -1 and show appropirate  message to user on Vending machine""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""Hashset""}]",834282,0,17,489,16,0,0,58,33,252.0838750457323,6.68114612033562,14.204273564945032,0.3764652824517304,37,11,8,0,1,10.088525344463331,0,4491,cs,0,0,0,0,0,2.1202055459272096
16,6,easy,0,0,0,0,True,False,66.90000000000002,1,0,3745,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""Did correct logical data mapping""}]",834283,0,5,482,0,0,1,51,28,196.2936771993063,3.4397699430837987,11.060640390037369,0.1938221286989252,15,3,2,0,1,5.658553507961585,0,4491,cs,0,0,0,0,0,2.1202055459272096
16,0,intermediate,4,0,2,0,True,True,62,1,FAILED,3743,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""d""},{""question"":""Is your solution exact or approximate?"",""answer"":""D""},{""question"":""How did you estimate the area under the curve?"",""answer"":""d""}]",834281,1,0,28,0,0,0,6,3,25.796414435952386,0.8320208306035269,1.4535611513290576,0.046882219211686026,9,2,2,0,0,5.69251916431547,0.8320208306035269,4491,cs,6.25,0,0,0,1.0416666666666667,2.1202055459272096
17,14,difficult,0,0,0,0,True,True,66.5,1,FAILED,3542,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""because we are accepting only 2 types of coins.""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""reject the request with appropriate message""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""ArrayList\u003cInteger\u003e""}]",822179,0,32,1168,26,8,11,1811,1753,1143.684332577712,20.337388597179267,64.44365046724327,1.1459591819529151,41,11,8,2,3,13.070215147360079,0.06053118804624591,4416,java,0,0,0,0,0,2.3736762962962956
17,6,easy,7,0,0,0,True,True,69.69999999999999,1,FAILED,3540,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""I am using same variable for both keys and values""}]",822177,0,4,549,2,1,3,20,20,23.79901932217048,0.4427085746803129,1.3410131091018596,0.024945481749537732,20,4,2,1,3,23.79901932217048,0.4427085746803129,4416,java,10.20408163265306,0,0,0,1.4577259475218658,2.3736762962962956
17,0,intermediate,4,0,2,0,True,True,65.10000000000001,0.95,FAILED,3541,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""According to the mentioned logic i have written the code""},{""question"":""Is your solution exact or approximate?"",""answer"":""approximate""},{""question"":""How did you estimate the area under the curve?"",""answer"":""based on the given description""}]",822178,0,0,145,0,0,0,6,5,16.375671648412528,0.3659805232155417,0.922726691112502,0.02062205474369266,13,2,2,0,1,11.804775906372715,0,4416,java,12.5,0,25,0,6.25,2.3736762962962956
19,1,easy,2,0,0,0,True,True,70,0.9,FAILED,3736,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""it will work for 2 number""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",834274,0,9,101,6,0,0,20,11,107.50794896422116,1.172772960749874,6.057794522624304,0.06608271933712398,13,3,2,0,0,7.005095509662413,0.16973124173726284,4544,java,0,0,0,0,0,0.5928833333333333
19,15,intermediate,0,0,0,0,True,True,72.79999999999998,0.95,0,3735,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""please give me""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""ready code""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""""}]",834273,0,8,153,8,0,0,39,24,223.64862806574058,1.0042261892862758,12.602021033253724,0.05658554523218413,18,0,0,0,0,11.651263195402205,0,4544,java,0,0,0,0,0,0.5928833333333333
18,1,easy,0,0,0,0,True,True,67.30000000000001,0.9,0,3748,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""because we tested multiple scenarios with different values and matches it with expected results.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""no""}]",834341,0,3,161,2,0,0,8,6,46.933531571300996,1.282486779425255,2.644582965438789,0.07226480890567401,12,3,2,0,0,6.620740774556057,0,4542,java,0,0,0,0,0,1.5390102091020912
18,15,intermediate,0,0,0,0,True,True,71.5,1,0,3746,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Will implemt builder interface to use in pattern matching function""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""""}]",834339,0,4,202,4,0,6,9,7,60.61363550664387,1.453523750778701,3.4154213963350104,0.08190229932581004,14,2,2,0,2,6.690104219198768,0,4542,java,0,0,0,0,0,1.5390102091020912
20,9,easy,0,0,0,0,True,False,59.4,0.9,0,3820,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""tested""}]",837066,0,0,342,0,0,1,38,21,141.92137625415052,0.9426096873515212,7.996902033744647,0.05311361490963795,20,2,2,0,2,8.036926005087794,0,4666,cs,0,0,0,0,0,2.3695880903490765
20,11,intermediate,0,0,0,0,True,False,50.5,0.9333333333333332,0,3821,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""then the starting and end coordinates will get change""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""will use arrays""},{""question"":""Describe in words the algorithm you developed."",""answer"":""Nothing""}]",837067,0,0,151,0,0,0,16,8,60.134023635052536,1.2824570132767743,3.388396509368945,0.07226313166028922,10,2,2,0,1,6.994850489850782,0,4666,cs,0,0,0,0,0,2.3695880903490765
20,4,intermediate,0,0,0,0,True,False,53.1,1,0,3822,"[{""question"":""Describe any other corner cases you considered."",""answer"":""Nothing""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""null check""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""separating each and storing""}]",837068,2,4,529,0,0,1,96,53,347.9484064751194,2.1623307672843874,19.60599166115905,0.12184173918634357,21,4,2,0,1,6.835150120863713,0,4666,cs,0,0,0,0,0,2.3695880903490765
21,14,difficult,0,0,0,0,True,False,71.1,1,0,3803,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""na""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""na""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""na""}]",836889,0,20,808,16,2,4,114,66,777.5087913699132,7.068336640259403,43.81060696470356,0.3982824655847372,48,0,0,0,0,12.331845252360393,0,4710,java,0,0,0,0,0,1.0307963541666667
21,6,easy,0,0,0,0,True,False,60.7,0.7,0,3804,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""use linkedhashMap""}]",836890,0,7,123,6,2,7,26,14,180.19552405239838,1.9540161603129549,10.15355114782552,0.11010375053292644,13,3,2,1,2,18.37343477387012,0.7161244921468777,4710,java,0,0,0,0,0,1.0307963541666667
21,2,intermediate,0,0,0,0,True,False,60.3,1,0,3805,"[{""question"":""the classes you used in the standard library and why"",""answer"":""na""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""na""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""na""}]",836891,0,4,55,4,1,5,13,8,91.42426385845707,1.8047026178674337,5.15152051706461,0.10169031907697768,14,2,2,1,3,4.116386909117035,0,4710,java,0,0,0,0,0,1.0307963541666667
22,9,easy,0,0,0,0,True,False,72,0.9,0,3609,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""It checks the map and build on the created library map and using builder methods to construct and return the map""}]",832874,0,9,76,6,3,6,14,8,109.0839664385836,0.6403671584423488,6.146599026065536,0.03608303108983652,18,3,2,1,2,19.865808744728085,0.1897076141870244,4630,java,0,0,0,0,0,2.7339069672131147
22,11,intermediate,0,0,0,0,True,False,69.1,1,0,3608,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""Based on the building increases the alogrithm will divid the lenght and iterate""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""For n""},{""question"":""Describe in words the algorithm you developed."",""answer"":""Divide and conquire algorithm""}]",832873,6,27,476,16,12,19,50,30,372.82355347303866,9.190955719179868,21.007641778059888,0.5178865539687649,21,4,2,2,2,11.499756968500321,0.05325803314622688,4630,java,0,0,0,0,0,2.7339069672131147
22,4,intermediate,0,0,0,0,True,True,67.5,1,FAILED,3610,"[{""question"":""Describe any other corner cases you considered."",""answer"":""By second iteration with max length""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""Null check was added at the begining of code, as well try catcj to be call for null pointer exception""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""row and column iteration to be provided and matched according to old array""}]",832875,16,37,683,16,0,8,75,42,420.5625334270761,7.986792853343863,23.697609674084806,0.4500350947670216,20,5,2,0,1,20.40201214945097,1.2038930612848555,4630,java,0,0,0,0,0,2.7339069672131147
23,12,easy,8,0,0,0,True,True,67.30000000000001,1,FAILED,3488,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""Need to more analysis""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Need to add more and more test case""}]",812710,1,0,148,0,0,0,29,15,114.98426212409352,0.2682326611058578,6.479065408597315,0.015114215840698213,18,2,2,0,1,6.6595820390616165,0,4389,cs,7.8125,0,0,0,0.9765625,1.6492755011135856
24,14,difficult,0,0,0,0,True,False,68.8,1,0,3437,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""return -1""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""list""}]",809712,0,135,1238,88,11,26,1561,1499,1213.3602971837308,29.551522450671143,68.36971064061129,1.665151763768296,46,0,0,0,0,12.948507468334215,0,4161,java,0,0,0,0,0,0.8433025034770514
24,6,easy,7,0,0,0,True,True,69.69999999999999,0.9,FAILED,3435,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""key and value pairs are correct""}]",809710,0,24,211,16,0,2,260,234,396.90702927327965,0.6401560221701971,22.36468327307537,0.03607113410765715,17,3,2,0,0,11.76350967278837,0,4161,java,11.224489795918366,0,0,0,1.6034985422740526,0.8433025034770514
24,2,intermediate,0,0,0,0,True,False,69.3,0.8666666666666668,0,3436,"[{""question"":""the classes you used in the standard library and why"",""answer"":""""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""not used""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""dayLindayLightTime Method""}]",809711,0,16,522,16,1,19,318,285,556.6585120979908,5.598496077649903,31.36626563940544,0.3154607561661144,14,2,2,1,2,8.369454235101019,0.038760877494176116,4161,java,0,0,0,0,0,0.8433025034770514
25,12,easy,8,0,0,0,True,True,62,1,FAILED,3588,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""NA""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""I executed few test cases.""}]",832268,0,3,967,2,1,2,24,23,41.682263855929115,0.18745606995885705,2.348687628307947,0.01056266410781739,22,3,2,1,2,6.6755220979634915,0,4585,java,7.8125,0,0,0,0.9765625,1.1284309686221008
25,4,intermediate,0,0,0,0,True,True,61.1,0.95,FAILED,3589,"[{""question"":""Describe any other corner cases you considered."",""answer"":""No other cases are considered.""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""did a null check""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""Using array copy""}]",832269,1,3,1047,2,0,0,25,15,78.19396352856147,1.9138674240695293,4.406027354528423,0.10784147321437526,16,3,2,0,1,11.38178970836408,0,4585,java,0,0,0,0,0,1.1284309686221008
26,10,easy,6,0,0,0,True,True,74.2,0.9333333333333332,FAILED,3466,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""bna""}]",811948,0,45,299,18,0,0,391,370,418.7541756458867,10.76540275482417,23.595713396020013,0.6066025672550219,28,9,3,0,0,14.092975736179266,0.6230157347079087,4194,java,13.888888888888884,0,0,0,2.3148148148148144,1.2032312230215827
27,10,easy,0,0,0,0,True,False,68.40000000000002,1,0,3778,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""by testing all possible scenarions and boundry conditions.""}]",834371,0,24,356,12,0,4,42,25,263.1615143226029,3.327743808211009,14.828469851652795,0.18750974610060206,24,0,0,0,0,7.014156977473488,0,4554,java,0,0,0,0,0,1.8247017488076311
27,2,intermediate,0,0,0,0,True,False,67.80000000000001,1,0,3776,"[{""question"":""the classes you used in the standard library and why"",""answer"":""TimeZone,LocalDate""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""stackoverflow""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""For each region Daylight savings is different. Based on Country Region""}]",834369,0,2,45,2,0,2,7,4,46.5859124078363,0.5438738111507471,2.6249955257686644,0.030645880848161975,12,2,2,0,2,16.287977472207256,0.5438738111507471,4554,java,0,0,0,0,0,1.8247017488076311
28,1,easy,0,0,0,0,True,False,67.5,0.8,0,3630,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Consider the declaration of int or double""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Input value may contains integer and double so shouldbe handle""}]",833023,0,1,245,0,0,0,57,32,202.0994719637121,0.3854182639228697,11.387781890383572,0.021717321096771627,15,3,2,0,0,7.037690703270815,0,4478,cs,0,0,0,0,0,2.6569488619119883
28,15,intermediate,0,0,0,0,True,False,69.39999999999999,1,0,3629,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Adding class builder and call method to add and find""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""write code string block to find dot""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""builder interface is blue print and use where ever required""}]",833022,0,17,937,12,0,0,145,77,520.4489964272144,8.357233563181731,29.32595319915686,0.4709084694768276,20,4,3,0,0,6.188511723173757,0,4478,cs,0,0,0,0,0,2.6569488619119883
28,3,intermediate,5,0,0,0,True,True,69.69999999999999,0.95,FAILED,3631,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""Analyze the existing code and know the funcationality""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""Required to fix""},{""question"":""Describe the faults you found in words."",""answer"":""Test method wrote""}]",833024,2,0,72,0,0,0,20,11,79.79000727060351,0.8742073136021787,4.495960286293581,0.049259318282965536,49,11,7,0,2,7.382503956007429,0,4478,cs,4,0,0,0,0.8,2.6569488619119883
29,14,difficult,14,0,0,0,True,True,65.90000000000002,0.9666666666666665,FAILED,2391,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""it might be possible that machine doesn\u0027t have enough coins available in reserve, so the coins can\u0027t be returned if that was not part of input""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""used hashmap to story coins. a simple array of size 2 can also be used""}]",835359,8,85,4561,32,4,8,133,91,136.92619502527495,11.80523754594241,7.715436506968866,0.6651945649887582,76,23,8,1,2,18.311792073875672,1.5870896710221356,1667,java,5.1020408163265305,0,0,0,0.3644314868804665,1.8293992740471867
29,1,easy,2,0,0,0,True,True,75.59999999999998,0.5,ACCEPTABLE,3129,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""For zero size array, I have returned zero. I have divided the number with the total size of array so that the sum doesn\u0027t exceed Double.MAX_VALUE""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""if inputs contains Double.MAX_VALUE, the my variable shouldn\u0027t exceed that value""}]",730006,0,10,286,6,0,0,184,169,204.8303861754716,0.8483222068847784,11.541661834268089,0.047800759551253534,15,4,2,0,0,4.353174191553752,0.12967251647545214,2722,java,37.5,0,0,0,18.75,1.8293992740471867
29,10,easy,6,0,0,0,True,True,69.3,0.4,PASSED,2432,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""All the test cases were passed to ensure accurate results. \nThought through all corner cases.""}]",835864,1,4,337,0,0,0,12,12,16.523727085206733,0.9158512920793169,0.9310692315729768,0.051605848629322056,28,8,3,0,0,13.269326501197341,0.800917747684865,1701,java,16.666666666666668,0,0,0,2.7777777777777786,1.8293992740471867
29,12,easy,0,0,0,0,True,False,62.3,1,0,3348,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""for even length list direct middle element doesn\u0027t exist and middle two elements needs to be compared""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""""}]",761084,0,36,892,12,6,6,920,884,554.7802336464405,2.8153192748430813,31.260429512631674,0.1586359506147667,35,7,2,1,1,13.598082532053207,0.5170948827901232,2897,java,0,0,0,0,0,1.8293992740471867
29,9,easy,0,0,0,0,True,False,61.3,0.9,0,3347,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Solution not completed""}]",761083,0,1,422,0,0,0,449,427,312.73134068506647,0.07764574881208915,17.62160120165098,0.004375136874906558,20,0,0,0,0,9.056081488958856,0,2897,java,0,0,0,0,0,1.8293992740471867
29,15,intermediate,5,0,0,0,True,True,63.2,1,FAILED,2297,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""was not able to test the code""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""""}]",835525,0,29,1209,21,8,8,50,42,148.299335710129,2.8445738420028674,8.35628353278901,0.1602843697168861,43,8,6,2,2,8.828611038255003,0.0393065000174536,1570,0,2,0,0,0,0.4,1.8768442056074768
29,0,intermediate,4,0,2,0,True,True,70.6,1,FAILED,2334,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""using single loop""},{""question"":""Is your solution exact or approximate?"",""answer"":""approximate. could have been improved by taking small iteration of 0.001 width rectangles""}]",835656,116,46,2567,16,0,8,184,96,423.89173313072206,12.720054341410437,23.885201456123,0.7167421224129559,18,4,2,0,1,13.034210037654653,0.644789165189029,1608,java,18.75,0,0,0,3.125,1.8768442056074768
29,4,intermediate,5,0,0,0,True,True,70.7,1,FAILED,2374,"[{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""Initially i submitted using for loop and did test run, but no result returned. so i simply used clone method to test the run""}]",835554,10,25,1247,10,0,5,52,28,182.1834039517898,3.641617755169391,10.265563032362317,0.2051957302068725,15,3,2,0,1,3.374300345897048,0.03307285474804784,1651,java,12,0,0,0,2.4,1.8768442056074768
29,2,intermediate,1,0,3,0,True,True,71.2,1,PASSED,2340,"[{""question"":""the classes you used in the standard library and why"",""answer"":""Calendar - most commonly used class for Java date time""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""NIST Website\nbegins at 2:00 a.m. on the second Sunday of March - 10:00 AM GST""}]",835392,24,10,3123,4,0,9,77,46,154.32128315343164,2.867439206740164,8.695604676844232,0.16157277380791285,26,4,2,0,2,11.720962297637485,0.10215675535576,1615,java,100,0,33.333333333333336,0,33.333333333333336,1.8768442056074768
29,3,intermediate,5,0,0,0,True,True,51.2,1,FAILED,2818,"[{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""""},{""question"":""Describe the faults you found in words."",""answer"":""Not sure what needs to be added here""}]",835875,1,60,50,12,6,18,27,14,151.06724400644185,4.832640930132039,8.512247997538593,0.2723068018543142,57,10,2,1,3,15.252387103647553,0.7452808760840668,1967,java,8,0,0,0,1.6,1.8768442056074768
30,12,easy,8,0,0,0,True,True,63.2,0.2,FAILED,3382,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""tried""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""test""}]",779509,0,0,72,0,0,0,14,9,55.8240340428065,0,3.1455397569518286,0,8,3,1,0,0,8.172752780740781,0,3490,py,1.5625,0,0,0,0.1953125,3.905815354330709
30,10,easy,6,0,0,0,True,True,75.9,0.4666666666666666,FAILED,3381,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""tried""}]",779508,0,6,304,0,0,0,53,31,235.0887815212284,2.365558417403395,13.24664405516348,0.1332930909942592,17,9,2,0,0,11.771692869981608,0.13530366041213127,3490,py,8.333333333333334,0,0,0,1.3888888888888893,3.905815354330709
30,9,easy,5,0,0,0,True,True,78.1,0.4,FAILED,3380,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""almost""}]",779507,0,1,179,0,0,0,37,20,139.44807302210793,0.363436195919741,7.857537801460364,0.02047868848933881,11,5,1,0,0,12.025732937754535,0,3490,py,16,0,0,0,3.2,3.905815354330709
30,1,easy,2,0,0,0,True,True,61.9,0.1,PASSED,3395,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""testing""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""testing""}]",805755,0,2,60,2,0,0,14,11,36.03241785899162,0.25168671508829593,2.030333437165214,0.014181894629824946,9,2,2,0,0,13.328067614664187,0.25168671508829593,3499,java,50,0,0,0,25,3.905815354330709
30,13,easy,5,0,0,0,True,True,63.4,0.2,PASSED,3597,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""test""},{""question"":""briefly describe what an edge weight is in your own words"",""answer"":""test""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""test""}]",832859,0,6,647,0,0,1,22,21,55.20893708124788,0.4785980452770717,3.1108806360169416,0.026967760478650925,58,10,4,2,3,7.046867609848459,0.059206214598675165,4591,java,20,0,0,0,4,3.905815354330709
31,12,easy,0,0,0,0,True,False,61.9,1,0,3489,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""not complex, timeout prior to submission""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""by test""}]",813124,0,8,573,2,0,0,73,44,311.712984516154,2.03511743317368,17.56421946865769,0.11467359723958308,32,6,2,0,1,9.9245888222858,0,4391,cs,0,0,0,0,0,1.6492259171597634
31,3,intermediate,5,0,0,0,True,True,61.7,1,FAILED,3491,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""Use Binary Reader and give it a try""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""Byte array length was wrong, corrected that""},{""question"":""Describe the faults you found in words."",""answer"":""Byte array length wrong""}]",813126,1,0,41,0,0,0,8,4,34.24654402312084,0,1.9297040711949225,0,57,10,2,0,3,8.515667645200367,0,4391,cs,8,0,0,0,1.6,1.6492259171597634
31,15,intermediate,0,0,0,0,True,False,61.9,0.9,0,3490,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""think about more optimum solution""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""using special character hashset algorithm""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""generic and can be used from any where""}]",813125,0,7,943,0,0,2,127,78,489.9338155736943,2.4919591253639566,27.606501779868193,0.1404154435618275,39,7,2,0,2,6.188511723173757,0,4391,cs,0,0,0,0,0,1.6492259171597634
32,13,easy,0,0,0,0,True,False,65.40000000000002,0.95,0,3786,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""NA""},{""question"":""briefly describe what an edge weight is in your own words"",""answer"":""NA""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""NA""}]",836878,0,8,22,8,4,4,7,4,67.13370388472143,0.5826986920030542,3.782810365135811,0.03283356234366628,39,4,4,2,2,21.816197908735237,0.2913493460015271,4740,java,0,0,0,0,0,2.0085975051975047
32,10,easy,6,0,0,0,True,True,66.10000000000001,0.9333333333333332,PASSED,3787,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""By Taking All Boundry Senerios""}]",836879,0,42,336,18,0,0,55,34,297.3059881934203,4.6967654109869885,16.752422534085262,0.2646505682123761,29,8,3,0,0,13.914017851348893,0.5326480289658373,4740,java,16.666666666666668,0,0,0,2.7777777777777786,2.0085975051975047
32,2,intermediate,0,0,0,0,True,False,55.00000000000001,1,0,3785,"[{""question"":""the classes you used in the standard library and why"",""answer"":""NNA""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""NA""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""NA""}]",836877,0,8,129,8,0,11,29,16,174.2625359978755,2.224698275562873,9.819242634959686,0.12535598677156048,14,2,2,0,3,16.611118937167866,0.5757118607035585,4740,java,0,0,0,0,0,2.0085975051975047
33,1,easy,0,0,0,0,True,False,67.80000000000001,1,0,3763,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""using test cases with possible values.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""yes""}]",834353,0,1,284,0,0,0,73,38,263.64898788858187,2.0683053980788717,14.855937724739036,0.1165436531187686,11,3,2,0,0,6.486016615126865,0,4594,cs,0,0,0,0,0,1.8516950177935945
33,3,intermediate,0,0,0,0,True,False,69.8,1,0,3761,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""I am trying to assign maximum values with maximun negative.""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""missing method trying to add""},{""question"":""Describe the faults you found in words."",""answer"":""""}]",834351,2,2,1104,1,0,0,79,39,284.770597145335,4.382179672640529,16.046085710048963,0.2469244765046353,46,9,6,0,2,8.354889643624363,0,4594,cs,0,0,0,0,0,1.8516950177935945
33,15,intermediate,0,0,0,0,True,False,69.39999999999999,0.95,0,3762,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""trying to search builder using regex""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""using regex to specify the pattern with . char""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""we extend when we required""}]",834352,0,9,1454,4,0,0,112,63,291.7452356775592,1.6408558499115156,16.439088529885606,0.09245797799861354,24,3,2,0,0,7.292520577572333,0,4594,cs,0,0,0,0,0,1.8516950177935945
34,14,difficult,0,0,0,0,True,False,77.4,1,0,3710,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""Map to track the input""}]",834248,0,1,901,0,0,0,125,76,834.4841596981382,6.937341953395535,47.02102142715496,0.3909012542024893,57,0,0,0,0,5.770657467855423,0,4624,java,0,0,0,0,0,1.755096
34,6,easy,0,0,0,0,True,False,60.4,0.9,0,3711,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""as curve formula FxDx a and b limit""}]",834249,0,12,169,10,0,2,30,17,195.21575841004466,0.5697481841652429,10.999902457630196,0.0321038347635112,15,3,2,0,0,12.785552793257773,0,4624,java,0,0,0,0,0,1.755096
34,0,intermediate,0,0,0,0,True,False,63.2,1,0,3712,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""area of curve can be didevied into number of rectangular and add the area of rectangular to calculate the area as we have""},{""question"":""Is your solution exact or approximate?"",""answer"":""""},{""question"":""How did you estimate the area under the curve?"",""answer"":""a-\u003eb fx Dx where a and b is limits""}]",834250,14,2,614,2,0,1,24,16,156.37668157678792,2.775397124210341,8.811421055361153,0.15638644080861386,17,0,0,0,0,12.87518626979079,0,4624,java,0,0,0,0,0,1.755096
35,10,easy,6,0,0,0,True,True,49.2,0.9333333333333332,FAILED,3547,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""bcz its""}]",822187,0,50,883,21,3,3,447,419,473.81831214241305,15.989346095865619,26.698434894062036,0.9009582466512716,29,9,3,0,0,6.0911711983955525,0.1578391877752949,4399,java,13.888888888888884,0,0,0,2.3148148148148144,1.8259034722222218
35,15,intermediate,0,0,0,0,True,False,54,1,0,3546,0,822186,0,12,299,8,0,0,111,96,224.07777861800773,1.9137317615753715,12.626202555550005,0.10783382898413968,13,2,2,0,0,6.229246851049421,0,4399,java,0,0,0,0,0,1.8259034722222218
36,1,easy,0,0,0,0,True,False,70.89999999999998,1,0,3607,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""By Executing the code""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Time exceeds with basic inputs are tested""}]",832869,0,6,730,6,0,0,134,76,800.1425950104007,1.2836791370359897,45.08596318757348,0.07233199516932153,26,0,0,0,0,12.821033625758366,0,4508,java,0,0,0,0,0,0.9117429403202328
36,4,intermediate,0,0,0,0,True,True,70.6,0.95,FAILED,3606,"[{""question"":""Describe any other corner cases you considered."",""answer"":""First made a try with copy is taking place sucessfully or not""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""I looped each and every va""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""""}]",832868,0,24,408,14,0,7,65,35,396.96509383005684,3.2759177903634513,22.367955060486363,0.1845894842030297,16,4,2,0,1,9.54053947821383,0.23138439314739184,4508,java,0,0,0,0,0,0.9117429403202328
37,1,easy,2,0,0,0,True,True,60.4,1,FAILED,3407,0,806938,0,0,40,0,0,0,24,12,79.55596672108457,0,4.482772707397254,0,8,2,2,0,0,6.169103101756537,0,4114,cs,0,0,0,0,0,2.6056773285198562
38,6,easy,0,0,0,0,True,False,69.69999999999999,0.9,0,3568,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""we tried to complete the Map question around 80% completion. But unable to complete it fully and execute as the complie test was taking more time""}]",822163,0,6,142,6,0,1,38,21,160.0696616588851,2.476517179897635,9.01951091968304,0.1395453299231078,14,0,0,0,1,10.322721469308654,0,4377,cs,0,0,0,0,0,3.67507936
39,10,easy,0,0,0,0,True,False,69.39999999999999,1,0,3640,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Input:\nA 2D array graph[V][V] where V is the number of vertices in graph and graph[V][V] is adjacency matrix representation of the graph. A value graph[i][j] is 1 if there is a direct edge from i to j, otherwise graph[i][j] is 0.\n\nOutput:\nAn array path[V] that should contain the Hamiltonian Path. path[i] should represent the ith vertex in the Hamiltonian Path. The code should also return false if there is no Hamiltonian Cycle in the graph.""}]",833274,1,9,550,3,0,0,89,52,537.1675041682804,10.5633975860104,30.267997816285483,0.5952200991029314,31,9,3,0,0,14.414686111220016,0.6189352988924006,4553,java,0,0,0,0,0,2.182711272247857
39,13,easy,0,0,0,0,True,False,67,0.9,0,3639,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""Input:\nA 2D array graph[V][V] where V is the number of vertices in graph and graph[V][V] is adjacency matrix representation of the graph. A value graph[i][j] is 1 if there is a direct edge from i to j, otherwise graph[i][j] is 0.\n\nOutput:\nAn array path[V] that should contain the Hamiltonian Path. path[i] should represent the ith vertex in the Hamiltonian Path. The code should also return false if there is no Hamiltonian Cycle in the graph.""},{""question"":""briefly describe what an edge weight is in your own words"",""answer"":""edge weightsis basically a Direction""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""org.jgrapht.graph.SimpleWeightedGraph""}]",833273,0,44,5465,28,14,20,174,154,315.430463915214,1.7976207028179707,17.773689806047248,0.10129127150319683,37,4,4,2,2,22.59550820746777,0.3144512491662346,4553,java,0,0,0,0,0,2.182711272247857
39,2,intermediate,1,0,2,0,True,True,71.7,1,FAILED,3638,"[{""question"":""the classes you used in the standard library and why"",""answer"":""Used Libraries are to format the Date.""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""www.timeanddate.com""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""From the URL \""www.timeanddate.com\""""}]",833272,0,6,269,6,3,11,30,17,181.2394401110126,3.5981048546266763,10.212373114413843,0.20274389094186265,15,2,2,1,3,8.715637740184,0.4303616904086459,4553,java,0,0,0,0,0,2.182711272247857
40,10,easy,6,0,0,0,True,True,61,0.9333333333333332,FAILED,3706,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Tested""}]",834244,0,50,353,21,0,0,53,32,314.8861931540286,6.603205839954011,17.743021558092586,0.3720735494855974,27,9,3,0,0,14.092975736179266,0.6230157347079087,4552,java,11.111111111111107,0,0,0,1.8518518518518512,1.5156885135135134
40,13,easy,5,0,0,0,True,True,62.9,0.5,FAILED,3705,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""Tested""},{""question"":""briefly describe what an edge weight is in your own words"",""answer"":""Tested""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""Tested""}]",834243,0,0,7,0,0,0,2,1,8.799504330000698,0.08038911184772712,0.4958292818871214,0.004529718277779272,38,4,4,2,2,3.8127010858874066,0.036409211218442,4552,java,4,0,0,0,0.8,1.5156885135135134
40,2,intermediate,0,0,0,0,True,False,65.2,0.9333333333333332,0,3704,"[{""question"":""the classes you used in the standard library and why"",""answer"":""Tested""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""Tested""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""TEsted""}]",834242,0,20,374,10,3,13,30,17,219.509941082955,5.5081167459168086,12.36881673927619,0.3103681148683681,15,4,2,0,2,18.47470653043191,0.6144740538989586,4552,java,0,0,0,0,0,1.5156885135135134
41,14,difficult,14,0,0,0,True,True,68.5,1,FAILED,3213,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""because it would have been a loss for the vending machine to return bigger amounts than the lowest possible input.""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""returns -1 signifying there is insufficient balance.""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""setters and getters for tracking total machine values.""}]",731950,8,48,2129,14,0,0,182,101,585.1101069691633,6.082446285266207,32.96943933243047,0.342730097132675,49,18,7,0,0,9.171609955230927,0,2825,py,3.0612244897959178,0,0,0,0.21865889212827988,1.7948756013745706
41,2,intermediate,0,0,0,0,True,True,67.2,0.7333333333333331,FAILED,3212,"[{""question"":""the classes you used in the standard library and why"",""answer"":""datetime, timezone""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""google search -\u003e datetime rules in chicago""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""going back 1 year -\u003e increased 1 day\ngoing future 1 year -\u003e decreases 1 day\nleap year -\u003e 2 days\nalways between 1-7(circular list)""}]",731949,22,57,3102,9,0,0,156,114,255.69684480927762,4.910549551196171,14.407855055010442,0.27669675089989193,77,29,4,0,0,5.814289759980996,0,2825,py,0,0,0,0,0,1.7948756013745706
41,0,intermediate,4,0,2,0,True,True,60.1,1,FAILED,3211,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""i covered the given cases. not sure why my solution is not passing robust scores.""},{""question"":""Is your solution exact or approximate?"",""answer"":""yes for the given test cases.""},{""question"":""How did you estimate the area under the curve?"",""answer"":""given the function, find end - start and multiply by the given function output""}]",731946,65,24,2292,4,0,0,329,170,614.7512168279727,46.758579731515226,34.639639114652674,2.6347248823203966,1,6,1,0,0,21.61241635903067,4.25523692448963,2825,py,18.75,0,0,0,3.125,1.7948756013745706
41,1,easy,2,0,0,0,True,True,57.4,0.25,PASSED,3149,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""i have applied float to maintain accuracy of results. \n\ni tried doing try except for checking len(list) to be zero but there is no expected output given for that.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""33,33,34 -\u003e should give 3.33333...\n0 len list -\u003e but no sign of checking this given in question.""}]",731349,0,4,155,0,0,0,36,18,107.00333933268152,2.2301592497117912,6.029361076619103,0.12566369852316794,6,4,2,0,0,8.160615872865161,0.8090461646604101,2754,py,50,0,0,0,25,1.7576272727272728
41,7,easy,1,1,0,0,True,True,76.59999999999998,1,FAILED,3148,0,731348,0,4,190,0,0,0,40,20,130.79973889469449,0.6080267975641805,7.370226569020188,0.03426073550262688,37,14,5,0,0,0.4769692282276201,0,2754,py,100,0,0,0,50,1.7576272727272728
41,15,intermediate,0,0,0,0,True,True,76.79999999999998,1,FAILED,3150,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""i didn\u0027t get the builder class constraint. why can\u0027t i build my own setters and getters and get this done?""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""pattern was easy. find index where this pattern is present. rmeove those indexes from all word_list words and search as strings.""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""its a design interface for class interaction. good to have but generally not used because a standalone class can do the job if setters are not complex. \n\nif this was a programming test, i don\u0027t understand constraint of builder class.""}]",731350,8,38,3407,19,0,0,253,138,639.2137388793936,11.676986081689591,36.018038884347774,0.6579679270968211,30,14,7,0,0,8.235399005645489,0,2754,py,0,0,0,0,0,1.7576272727272728
42,3,intermediate,0,0,0,0,True,False,63.4,0.95,0,3387,0,780750,0,33,1090,19,9,20,407,382,332.77889301412466,19.02945013297797,18.751228860452365,1.0722602365195388,38,10,6,3,5,26.719363552974148,1.6899006880786342,3415,java,0,0,0,0,0,0.6986342476489028
42,4,intermediate,0,0,0,0,True,True,64.3,1,FAILED,3388,"[{""question"":""Describe any other corner cases you considered."",""answer"":""""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""take the initial 2 d elements and loop through it and put it in the new array""}]",780751,9,38,416,24,0,12,85,63,300.89843763722547,12.255923128595743,16.954847757272525,0.6905895304803953,23,6,2,0,1,17.729142153388104,0.5831457890361254,3415,java,0,0,0,0,0,0.6986342476489028
43,14,difficult,14,0,0,0,True,True,63.5,1,FAILED,3628,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""it returns -1""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""Not used""}]",833021,1,110,970,80,17,27,64,43,517.0060494159948,11.998048862437065,29.131952050895766,0.6760589833709747,52,12,8,2,3,7.781021458056233,0.0307319615631658,4623,java,2.0408163265306123,0,0,0,0.1457725947521866,1.7948616071428571
43,6,easy,0,0,0,0,True,False,48.1,1,0,3626,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""Yes""}]",833019,0,39,442,18,0,18,64,37,430.3497705451882,3.2568070371124334,24.249095140759056,0.18351264274635035,21,0,0,0,0,11.109108958032675,0,4623,java,0,0,0,0,0,1.7948616071428571
43,0,intermediate,0,0,0,0,True,False,45.4,0.95,0,3627,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""By adding max int check""},{""question"":""Is your solution exact or approximate?"",""answer"":""approximate""},{""question"":""How did you estimate the area under the curve?"",""answer"":""f(x)*(End-start)""}]",833020,1,9,69,8,0,4,15,8,107.1012009001738,2.508842997775224,6.034875322525957,0.14136680604989527,10,2,2,0,1,14.936088903854305,0.4243760236872061,4623,java,0,0,0,0,0,1.7948616071428571
44,14,difficult,14,0,0,0,True,True,68.2,0.9666666666666665,FAILED,3691,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""-""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""-""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""-""}]",834128,0,98,518,64,8,16,63,43,428.8186169497607,10.850125786996896,24.162818600716754,0.6113764907200384,53,14,8,1,2,23.512241603511015,1.0023629668086165,4523,java,2.5510204081632653,0,0,0,0.1822157434402332,0.4227161589403973
44,6,easy,7,0,0,0,True,True,71.89999999999998,1,FAILED,3689,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""-""}]",834126,0,11,204,10,0,10,35,21,221.3887787486644,1.0802888122711178,12.474684376319681,0.06087147706637212,18,3,2,0,2,5.858354808530789,0.05742005683657004,4523,java,11.224489795918366,0,0,0,1.6034985422740526,0.4227161589403973
45,8,easy,1,1,0,1,True,True,79.2,0.95,ACCEPTABLE,3697,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""no comments""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""no comments""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""no comments""}]",834134,0,44,162,24,4,8,24,12,173.06760624928748,1.7352103941253754,9.751911438004882,0.09777461222548038,51,11,6,1,2,27.29328949297368,0.3616540675533184,4636,java,100,100,0,50,83.33333333333333,0.798832972241029
45,10,easy,0,0,0,0,True,False,71.5,1,0,3695,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""no comment""}]",834132,1,40,465,18,0,0,57,36,306.8694843683556,8.963852883756626,17.291300778008804,0.5050898972958967,31,0,0,0,0,14.220515156920438,0.969694326707769,4636,java,0,0,0,0,0,0.798832972241029
46,14,difficult,14,0,0,0,True,True,63.9,0.3,FAILED,3673,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""it returns a message that insufficient fund is there""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""arraylist""}]",834116,0,18,110,18,2,4,14,7,110.19072538078107,3.4567889312252027,6.208962026406474,0.19478110460849168,30,8,8,1,2,6.406668259659264,0.2927363881782595,4519,java,2.0408163265306123,0,0,0,0.1457725947521866,1.7906466165413537
47,1,easy,2,0,0,0,True,True,65.2,0.9,ACCEPTABLE,3508,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""write a test class with all the double values to make it auto run, current code the precise may not correct""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""this tool is not good to do the programming""}]",813203,0,0,1471,0,0,0,64,35,151.10971189042957,4.360365584450854,8.514640952826893,0.24569530912469176,14,2,2,0,0,6.841589074174858,0.3456748782336103,4366,cs,37.5,0,0,0,18.75,2.167335541195477
47,3,intermediate,5,0,0,0,True,True,65.8,1,FAILED,3509,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""this tool is not good to use""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""""},{""question"":""Describe the faults you found in words."",""answer"":""""}]",813204,2,2,302,0,0,0,20,10,79.22842096285525,1.892601037054209,4.464316352130253,0.10664316737728513,47,11,7,0,2,15.555118346457341,1.0470908456212693,4366,cs,4,0,0,0,0.8,2.167335541195477
48,8,easy,0,0,0,0,True,False,66.5,1,0,3581,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""will try to reduce the functional calling and will use the function in the straight calc method""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""instead of calling a fuinction and ex""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""""}]",832264,1,55,94,30,5,10,25,14,214.1871452179105,7.843413709743942,12.068890976139874,0.4419560513183624,54,11,6,1,2,23.018870911070746,0.8527017488541702,4507,java,0,0,0,0,0,2.1147105
48,1,easy,2,0,0,0,True,True,70.6,1,ACCEPTABLE,3579,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""developing the code in flexible way .so, that it may useful for no.of input value""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",832262,4,24,305,16,2,2,84,46,471.7220349993004,2.2072123258880465,26.58031510554597,0.12437069878882437,16,3,2,0,0,11.565783712137387,0.2855626000275507,4507,java,37.5,0,0,0,18.75,2.1147105
49,10,easy,6,0,0,0,True,True,75.59999999999998,0.9333333333333332,FAILED,3680,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""yes""}]",834117,0,0,41,0,0,0,4,2,16.756262323528844,0,0.9441719900815,0,43,8,3,0,1,7.2133242421693655,0,4599,cs,8.333333333333334,0,0,0,1.3888888888888893,3.6657159250585485
50,13,easy,0,0,0,0,True,False,70.5,0.3,0,3799,0,836885,0,4,4,4,2,2,6,3,45.138423420255755,0.30360594776055233,2.543433269721508,0.017107408941380863,38,0,0,0,0,12.09747091137856,0,4707,java,0,0,0,0,0,1.6062668261563
51,10,easy,6,0,0,0,True,True,65.10000000000001,0.9333333333333332,PASSED,3561,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""I made sure that the conditions are implemented in correct sequence.""}]",822195,0,6,413,2,0,0,63,39,251.92716499064153,3.523654853292406,14.195443359155462,0.1985488261616556,31,7,3,0,1,6.457781167133727,0,4370,cs,16.666666666666668,0,0,0,2.7777777777777786,3.2932180275715797
51,2,intermediate,1,0,2,0,True,True,66.8,0.9333333333333332,FAILED,3562,"[{""question"":""the classes you used in the standard library and why"",""answer"":""DateTime class to determine the 1st Sunday after 8th of March""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""""}]",822196,0,1,116,0,0,0,15,9,62.704764373317325,0.2606464440818045,3.533251092805658,0.014686752156584557,12,3,2,0,1,7.225907728471313,0,4370,cs,0,0,0,0,0,3.2932180275715797
52,12,easy,8,0,0,0,True,True,70.3,1,FAILED,3655,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""To find length of lists is not complex as it seems.""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""By providing manual inputs.""}]",834113,2,17,523,12,6,6,42,23,260.39800252624985,2.978992518625008,14.67275311829082,0.16785851405528288,20,3,2,1,1,4.854410508825153,0.12454173841505088,4631,java,7.8125,0,0,0,0.9765625,1.8953825520833332
52,3,intermediate,0,0,0,0,True,False,69.19999999999999,1,0,3653,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""Upto the mark.""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""As per me process was smooth and description can be elaborated""},{""question"":""Describe the faults you found in words."",""answer"":""Description could be elaborated""}]",834111,4,96,3898,50,27,46,72,41,588.0896088633542,19.72700757714333,33.13732654847979,1.1115657921104751,46,11,6,3,5,6.208109642011565,0.10814996439403116,4631,java,0,0,0,0,0,1.8953825520833332
52,15,intermediate,0,0,0,0,True,True,71.2,0.9,FAILED,3654,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Exact compilation/run time error needs to be displayed on console.""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""upto the mark.""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""upto the mark""}]",834112,2,8,1077,4,1,2,56,33,244.93706053105075,1.3722772686333922,13.801569074362128,0.07732427045199955,19,3,2,1,1,11.511059906181293,0,4631,java,0,0,0,0,0,1.8953825520833332
53,10,easy,6,0,0,0,True,True,63.7,0.9333333333333332,PASSED,3557,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""we went through the requirement and then sample output. and based on the skeleton implementation we have specific condition for 9, 5 and for both 9 \u0026 5, if not returning the current value in the iteration.""}]",822194,0,5,443,0,0,0,70,43,242.6301066225844,3.882520697760728,13.67157819568482,0.21876998718204327,32,8,3,0,1,6.457781167133727,0,4374,cs,16.666666666666668,0,0,0,2.7777777777777786,2.5587426925845933
54,1,easy,2,0,0,0,True,True,66.60000000000001,0.2,ACCEPTABLE,3126,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":"".""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",729972,0,3,91,2,0,0,36,32,52.52532038679178,0.2323223180243189,2.9596657847512966,0.013090761001118835,12,3,2,0,0,12.269336043734492,0.2323223180243189,2719,java,37.5,0,0,0,18.75,1.953137869822485
54,3,intermediate,5,0,0,0,True,True,66.10000000000001,0.95,FAILED,3127,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":"".""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""""},{""question"":""Describe the faults you found in words."",""answer"":""""}]",729973,0,10,10,6,3,5,42,40,37.15334577286658,1.958194015438527,2.093494822368352,0.11033916185032057,38,10,6,3,5,18.85778150433447,1.1926847687307331,2719,java,4,0,0,0,0.8,1.953137869822485
55,10,easy,6,0,0,0,True,True,64.8,0.9333333333333332,FAILED,3539,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""If the no. is divisible 4 it returned Goose and if the no. is divisible by 11 it returned Elephant and if the no. is divisible by 11 \u0026 4 it returned ElephantGoose. verified for the no. s below 100""}]",822176,0,5,420,0,0,2,70,43,258.0062810585112,4.239955440293077,14.537985807161741,0.2389105093143063,32,8,3,0,1,7.496023668128407,0,4476,cs,11.111111111111107,0,0,0,1.8518518518518512,2.1828552469135807
55,7,easy,1,1,0,0,True,True,68.10000000000001,0.95,FAILED,3538,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""Need proper IDE to debug the code and intellisence will be helpful with IDE. Code is rendering in small panel and really difficult to navigate up and down.""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""Changed  the code from while to for loop""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""replaced the while loop with for loop as we know the no. of iterations""}]",822175,6,5,120,2,0,0,26,13,115.58698922289568,4.6085431938707835,6.513027519798751,0.2596794747372493,50,12,6,0,1,10.012422120113335,0,4476,cs,100,0,0,0,50,2.1828552469135807
56,10,easy,0,0,0,0,True,True,71.6,1,0,3782,0,834983,1,18,2034,3,0,3,71,36,103.30777841694159,13.148353720181268,5.821125789004746,0.7408756832869042,33,8,3,0,1,25.331955565114,1.5421898330684058,4661,cs,0,0,0,0,0,2.5737579419889505
57,10,easy,6,0,0,0,True,True,63.3,0.9333333333333332,PASSED,3764,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""It was logical questions instead of first one where api knowledge is required.""}]",834360,1,5,470,0,0,0,17,17,22.8879626114155,1.2897370011931824,1.289677422714164,0.07267334012719491,33,9,3,0,0,19.224232331108478,1.160347426692126,4622,java,16.666666666666668,0,0,0,2.7777777777777786,1.5600116305587233
58,9,easy,0,0,0,0,True,False,73,1,0,3760,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""NA""}]",834356,0,6,112,4,3,4,12,7,86.71343883766346,0.8727538267250342,4.886077726248256,0.04917741806137352,18,3,2,0,2,11.251399319003923,0.08212700232849579,4627,java,0,0,0,0,0,2.16998578313253
58,4,intermediate,0,0,0,0,True,False,71,0.8499999999999999,0,3759,"[{""question"":""Describe any other corner cases you considered."",""answer"":""""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""Checked array is not null""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""took input array and coppied in the new array of same size by checking input array index""}]",834355,0,29,859,12,0,6,74,45,396.13627927362137,7.674158251124602,22.32125350652112,0.43241894452740576,27,0,0,0,0,12.061004128121338,0,4627,java,0,0,0,0,0,2.16998578313253
58,11,intermediate,0,0,0,0,True,False,71.1,1,0,3758,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""NA""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""NA""},{""question"":""Describe in words the algorithm you developed."",""answer"":""NA""}]",834354,0,26,566,20,19,23,71,40,481.92832082146106,7.5557750654896925,27.155412881529013,0.42574835858079213,20,3,2,2,2,20.65643225013165,0.5448758832004083,4627,java,0,0,0,0,0,2.16998578313253
59,10,easy,0,0,0,0,True,False,71.6,1,0,3846,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Tried to complete. But time limit is over.""}]",837393,1,5,259,3,0,1,34,18,214.3856257939103,3.001830479568011,12.080074842614145,0.16914537401346585,18,0,0,0,0,11.96687866427866,0,0,java,0,0,0,0,0,1.7145952839268528
59,13,easy,0,0,0,0,True,False,69.19999999999999,0.95,0,3845,0,837392,2,4,351,4,2,2,72,43,461.17542443652314,1.2511895771225003,25.98604091173073,0.07050129260283586,52,0,0,0,0,11.76046814675107,0,0,java,0,0,0,0,0,1.7145952839268528
59,4,intermediate,0,0,0,0,True,False,70.3,1,0,3725,"[{""question"":""Describe any other corner cases you considered."",""answer"":""""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""i have used for loop for copy one array content to another array.""}]",834263,11,6,260,4,0,2,57,29,293.55012677440436,7.365837602787211,16.54078946926489,0.4150458744176616,12,4,2,0,1,20.246017526242756,1.5596770457801514,4510,java,0,0,0,0,0,1.7179962245885771
60,13,easy,5,0,0,0,True,True,55.40000000000001,1,FAILED,3667,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""Not aware""},{""question"":""briefly describe what an edge weight is in your own words"",""answer"":""not aware""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""not aware""}]",834089,1,26,203,24,12,12,36,20,303.0986438272331,2.040512282655925,17.078823678447517,0.11497758303745932,42,5,4,2,2,22.15309613288255,0.2958485294836815,4610,java,4,0,0,0,0.8,2.3936927330173776
60,10,easy,6,0,0,0,True,True,61.8,0.8666666666666668,PASSED,3666,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""NA""}]",834088,0,46,451,18,0,0,49,31,301.3939590035444,5.8831895728506955,16.982769103067433,0.3315024973812508,29,12,3,0,0,10.661125539277652,0.08711066721056891,4610,java,16.666666666666668,0,0,0,2.7777777777777786,2.3936927330173776
60,15,intermediate,0,0,0,0,True,False,55.7,1,0,3665,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""getting the words through a class""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""N""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""Builder interface is apt because it helps you to get the input in form of collection""}]",834087,0,31,728,23,0,0,98,58,528.546859320735,1.1658683236118152,29.782246803062,0.06569366091457365,27,5,2,0,0,10.033953744288318,0.09125898084873704,4610,java,0,0,0,0,0,2.3936927330173776
61,1,easy,2,0,0,0,True,True,68.10000000000001,0.5,ACCEPTABLE,3617,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Logic \n\nMean is the sum of the items in the array divided by number of items""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",833010,0,3,334,0,0,0,65,35,313.34121336337336,0.9689393841340824,17.65596594775338,0.05459722514021578,13,3,2,0,0,6.9471959889443315,0,4649,js,37.5,0,0,0,18.75,1.9753476856835304
62,9,easy,0,0,0,0,True,False,77.7,1,0,3813,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Looped entryset of input map and each entry is added to ImmutableMap object imMap""}]",836997,0,29,380,20,0,20,41,24,236.47362739413623,4.23418573920077,13.324676533918815,0.23858540159891506,23,5,3,0,3,16.936878381516827,0.15175045251237826,4749,java,0,0,0,0,0,2.66123514986376
62,11,intermediate,0,0,0,0,True,True,79.1,0.9,FAILED,3814,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""by adding co ordinates with start and end with height""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""it works only for first building""},{""question"":""Describe in words the algorithm you developed."",""answer"":""taking the first building and generate the co ordinates""}]",836998,0,18,475,14,14,18,106,55,648.4778575783713,8.747067584044274,36.54004798276602,0.4928746070421499,15,3,2,2,2,20.365378542108335,0.6300221306703546,4749,java,0,0,0,0,0,2.66123514986376
62,4,intermediate,0,0,0,0,True,True,75.59999999999998,1,FAILED,3812,"[{""question"":""Describe any other corner cases you considered."",""answer"":""no""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""missed to do null values check""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""used input array length to copy to output array""}]",836996,6,51,631,26,0,13,66,36,474.5459801331176,9.336721139683608,26.739437100976485,0.5261000579414752,17,3,2,0,1,12.705767266896455,0.12453425961074432,4749,java,0,0,0,0,0,2.66123514986376
63,1,easy,2,0,0,0,True,True,69.1,1,ACCEPTABLE,3719,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""I should have to write Junit test cases to ensure correctness and to handle the corner cases. Because of the time contraint I unable to write that.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""In given problem only 2 numbers are I metioned for the Mean however I\u0027ve consider more than 2 numbers.""}]",834257,0,29,648,14,0,0,67,38,346.42096235957564,6.141145311150996,19.51992414070218,0.34603763523487224,17,5,2,0,0,11.738045705652572,0.3413618360108265,4620,java,37.5,0,0,0,18.75,2.259608815426997
63,8,easy,0,0,0,0,True,True,68.89999999999999,0.75,FAILED,3720,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""Functional understanding of given problen is not cleared, So unable to provide the optimized solution.""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""""}]",834258,0,33,1783,18,3,6,66,59,109.45128243327231,1.032943348390953,6.167296331168418,0.05820368278206463,51,11,6,1,2,12.998897135542114,0.1722439511729147,4620,java,0,0,0,0,0,2.259608815426997
63,15,intermediate,0,0,0,0,True,False,68.40000000000002,1,0,3721,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""As per the index of patter I would have compared the same in dex in the matched word. and also I would have compared the other character of pattern and the matched string.""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""""}]",834259,0,31,557,12,0,2,83,48,508.45247798254456,3.4623872839662124,28.649980450863925,0.1950965572880094,22,7,2,0,0,15.547499073812787,0.6997546626682895,4620,java,0,0,0,0,0,2.259608815426997
64,14,difficult,14,0,0,0,True,True,73.4,1,FAILED,3230,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""So they don\u0027t run out of change.""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""Returns false""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""this.fiveCents\nthis.tenCents\nthis.totalCoinValue""}]",732182,0,50,2651,14,0,0,302,191,978.9562452370454,3.6289852077630966,55.161649323804426,0.2044839188736464,102,20,8,0,0,7.209625844669486,0,2787,js,4.081632653061225,0,0,0,0.2915451895043732,1.1055044183949505
64,0,intermediate,4,0,2,0,True,True,73.7,1,FAILED,3229,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""not sure""},{""question"":""Is your solution exact or approximate?"",""answer"":""approx""},{""question"":""How did you estimate the area under the curve?"",""answer"":""not sure""}]",732181,0,17,532,2,0,0,151,78,553.4808740270224,5.477683971532559,31.187213962886144,0.3086533068402239,12,2,1,0,0,8.160529003993469,0,2787,js,18.75,0,0,0,3.125,1.1055044183949505
64,2,intermediate,1,0,2,0,True,True,79.1,0.8666666666666668,PASSED,3231,"[{""question"":""the classes you used in the standard library and why"",""answer"":""Date()""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""en.wikipedia.org/wiki/Time_in_Portugal""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""From the Wikipedia""}]",732180,0,14,230,6,0,0,61,34,234.97911857204136,2.608326554349995,13.24046483195887,0.14697244684126035,13,3,1,0,0,5.141458369493925,0,2787,js,100,0,50,0,50,1.1055044183949505
64,6,easy,7,0,0,0,True,True,64.7,0.9,FAILED,3292,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""By testing more keys and less values.""}]",739137,0,4,284,0,0,0,56,32,215.68457027823158,0.7645895067150426,12.153267000572002,0.04308263873005196,15,5,1,0,0,6.5981790738275885,0,2868,js,10.20408163265306,0,0,0,1.4577259475218658,1.1055044183949505
64,11,intermediate,4,0,0,0,True,True,60.7,0.9666666666666665,FAILED,3290,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""Not sure""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""Not sure""},{""question"":""Describe in words the algorithm you developed."",""answer"":""I have assuming that the buildings are given in order from the left hand side. That may be wrong.""}]",739135,9,41,1287,6,0,0,191,109,789.1710485467318,15.192505686389573,44.467744956152714,0.8560583530672519,34,6,1,0,0,9.991982630354245,0,2868,js,6.25,0,0,0,1.5625,1.1055044183949505
64,5,intermediate,4,0,3,0,True,True,62.2,0.3333333333333333,PASSED,3291,"[{""question"":""What other corner cases did you consider?"",""answer"":""Input being null or not an Object itself.""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""Check specifically for null, because instanceof of null is also an Object""},{""question"":""Describe in words how you made a complete copy of the input object."",""answer"":""Copying each key and value. If the value is an object, do a recursive copy""}]",739136,0,4,362,0,0,0,65,40,232.26073784054333,3.3143576914079333,13.087291117230516,0.1867554730833029,22,5,1,0,0,5.3821681167987165,0,2868,js,25,0,33.333333333333336,0,8.333333333333334,1.1055044183949505
64,1,easy,2,0,0,0,True,True,68,0.75,ACCEPTABLE,3154,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""By testing with different values, including float and a string (which is ignored)""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Ignore strings or non-numbers, who value is counted as 0, but gets used in avg computation""}]",731258,0,4,169,2,0,0,49,26,185.7444622587669,0.7891773263057752,10.466219446279494,0.044468098691618,11,4,2,0,0,5.554476885170296,0,2740,js,37.5,0,0,0,18.75,1.1046298007246378
64,7,easy,1,1,0,0,True,True,67.60000000000001,0.95,FAILED,3155,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""At this point of time, I did not make any changes to optimise the code.""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""It does not.""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""None""}]",731260,0,0,166,0,0,0,36,18,113.07538834897386,0.2831653761384368,6.371505314569761,0.015955635663174518,43,6,5,0,0,6.372403405013323,0,2740,js,100,0,0,0,50,1.1046298007246378
64,15,intermediate,8,0,0,0,True,True,66,0.95,FAILED,3156,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Handle different regular expression chars appearing the pattern, that would skew the result.""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""I am using regular expression. So not much of a change needed to handle full stop char.""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""Creates a functional model.""}]",731259,0,0,604,0,0,0,84,52,284.3483919416655,0,16.022295540160567,0,28,0,0,0,0,5.141458369493925,0,2740,js,7.03125,0,0,0,0.87890625,1.1046298007246378
64,1,easy,2,0,0,0,True,True,52,0.5,ACCEPTABLE,2751,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""by simple logic, not tested""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""not considered - overflow of total value""}]",835296,0,6,124,4,0,2,16,9,66.1152638874137,0.9683934971888136,3.7254239086295526,0.05456646582447326,10,3,2,0,0,6.766626934605559,0.11767857082801145,1909,java,37.5,0,0,0,18.75,1.0774325428194993
65,14,difficult,0,0,0,0,True,True,69.69999999999999,1,FAILED,3683,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""NA""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""NA""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""NA""}]",834120,7,58,354,38,0,0,109,58,734.2686837211023,9.417884135016967,41.37413887284344,0.5306733825496288,29,10,8,0,0,9.416557310502975,0,4593,js,0,0,0,0,0,2.444681758530184
66,3,intermediate,5,0,0,0,True,True,69.39999999999999,0.75,FAILED,3445,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""update large stream number""},{""question"":""Describe the faults you found in words."",""answer"":""update large numbers in test method""}]",809720,2,0,204,0,0,0,20,11,89.98219877251555,0.8448257160201089,5.070263883829133,0.04760374134550718,49,11,7,0,2,6.204739191016119,0,4138,cs,4,0,0,0,0.8,1.755533139534884
67,1,easy,2,0,0,0,True,True,61.4,0.15,PASSED,3151,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""I checked mean for some cases""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""4.0 ,5.0 ad some other values""}]",731359,0,2,47,2,0,0,12,10,26.166809284999214,0.3566986798682356,1.4744319419020495,0.020099046907240674,9,2,2,0,0,3.9016574352418703,0,2755,java,50,0,0,0,25,3.4814537142857143
68,14,difficult,14,0,0,0,True,True,64.2,1,FAILED,3634,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""It may be first customer when machine will not have anything to return of the coin choice or machine do not have the nomination of the coin to retun.""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""it will return -1 if the summation of input coins is not equal to or greater than 110""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""int""}]",833268,0,27,1702,14,0,0,211,124,777.7021445105194,11.544725551188185,43.821501913471394,0.6505153887036139,66,15,8,0,1,1.9420462034455863,0,4493,cs,4.081632653061225,0,0,0,0.2915451895043732,0.7933262698412699
68,6,easy,7,0,0,0,True,True,70,1,FAILED,3632,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""Find the difference between start and and and thats should be positive.\n\nAnd apply the curve on diffrence.""}]",833266,0,10,513,8,0,3,79,45,334.008333512246,3.9910831400331785,18.820504648774687,0.2248871996718811,21,4,2,0,1,10.851293509430723,0,4493,cs,10.20408163265306,0,0,0,1.4577259475218658,0.7933262698412699
68,0,intermediate,0,0,0,0,True,False,72.7,0.95,0,3633,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""Validations""},{""question"":""Is your solution exact or approximate?"",""answer"":""approximate""},{""question"":""How did you estimate the area under the curve?"",""answer"":""Did not get the way to use func""}]",833267,0,1,360,0,0,0,36,23,152.75335643280275,0.8101286264506236,8.607256066424148,0.045648650199502865,19,3,2,0,0,7.8054086976720365,0,4493,cs,0,0,0,0,0,0.7933262698412699
69,4,intermediate,0,0,0,0,True,True,68.5,1,FAILED,3575,"[{""question"":""Describe any other corner cases you considered."",""answer"":""null, 2 D array""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""added null checks""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""by looping input array""}]",822167,5,19,432,12,0,6,157,140,306.8217722421062,3.4232522573442767,17.288612323249506,0.19289139988153686,20,4,2,0,1,8.699747210305395,0.038732776015614284,4426,java,0,0,0,0,0,1.0985805575411007
70,12,easy,8,0,0,0,True,True,70.6,1,FAILED,3635,0,833269,0,12,547,8,4,4,35,22,199.44999550480884,1.623798381815724,11.238490752982118,0.09149683384326447,25,4,2,1,1,6.929270588487134,0.03085030853971612,4632,java,4.6875,0,0,0,0.5859375,0.9292262331838564
70,3,intermediate,5,0,0,0,True,True,71,0.95,FAILED,3637,0,833271,3,4,799,0,0,0,16,8,43.903906420510644,2.0858066120899608,2.4738714336787475,0.11752980120732473,37,10,6,3,5,17.908086054614955,1.628116444029623,4632,java,4,0,0,0,0.8,0.9292262331838564
72,14,difficult,0,0,0,0,True,False,67.90000000000002,0.9333333333333332,0,3468,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""re""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""return message insufficient fund""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""""}]",811950,0,57,1129,52,4,8,784,747,713.9131857081378,17.260515983722524,40.227159272207,0.9725853780231776,38,0,0,0,0,13.592197506988098,0,4204,java,0,0,0,0,0,1.007225
72,6,easy,0,0,0,0,True,False,65.8,1,0,3469,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""Proper Exception handling\nProper Validation\nAdd unit test cases.""}]",811951,0,34,256,14,0,7,315,286,483.1199397057337,4.3330038444067815,27.22255751985345,0.2441535459288967,20,6,2,0,0,13.482587299266513,0.5379711717121445,4204,java,0,0,0,0,0,1.007225
72,0,intermediate,0,0,0,0,True,False,68.40000000000002,1,0,3467,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""Needs to consider all the validations and all range of inputs""},{""question"":""Is your solution exact or approximate?"",""answer"":""approximate""},{""question"":""How did you estimate the area under the curve?"",""answer"":""""}]",811949,0,26,208,10,0,5,278,254,413.2887747328228,8.945646244633574,23.287752207716398,0.5040640003290433,16,0,0,0,0,14.300422491840555,1.2300426514337,4204,java,0,0,0,0,0,1.007225
71,14,difficult,14,0,0,0,True,True,67,0.8666666666666668,PASSED,2405,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""To be consistent, so that it always not return the change as the user have no way to know why vending m/c did not return the coins.""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""I have used 2 integer variables to keep track of the count.""}]",835848,4,66,1710,35,4,8,293,164,778.060446296853,13.396414881432095,43.84169129127651,0.754853287346686,65,17,9,1,2,12.062781235667211,0.2273743891297817,1680,java,7.142857142857142,0,0,0,0.5102040816326531,4.052442857142856
71,1,easy,2,0,0,0,True,True,65.10000000000001,0.7,ACCEPTABLE,2731,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""I checked the sample input and output if they are according to the expectation. Then dry run the program for checking the accuracy""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""the null array and zero length array are problematic inputs""}]",835668,0,15,179,6,0,0,45,26,159.6360482050163,1.3237256400742041,8.995077924438599,0.07458851191150109,15,5,2,0,0,13.075784946923962,0.4577544446927535,1881,java,37.5,0,0,0,18.75,4.052442857142856
71,3,intermediate,5,0,0,0,True,True,71.2,0.8,FAILED,2419,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""I have not got the break through""},{""question"":""Describe the faults you found in words."",""answer"":""""}]",835664,2,0,46,0,0,0,2,2,12.534133465400936,0.4140039898629821,0.7062659625086622,0.023328052728186933,39,10,6,3,5,5.031110556140806,0.12907504498867212,1694,java,8,0,0,0,1.6,4.052442857142856
71,0,intermediate,4,0,2,0,True,True,70.19999999999999,0.95,FAILED,2332,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""I have checked the negative cases. Handling of large value is not taken care.""},{""question"":""How did you estimate the area under the curve?"",""answer"":""Calculated the maximum complete rectangle. Then calculated the negative and positive area separately and then returned the sum of both.""}]",835425,0,22,301,10,0,5,44,29,177.99286571268792,2.0083919460547266,10.029437054364843,0.11316768524848428,23,5,2,0,1,11.520881348792505,0.3100187219584112,1606,java,18.75,0,0,0,3.125,4.096425221238938
71,11,intermediate,0,0,0,0,True,True,66.7,1,0,2314,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""It does not effect the performance""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""It increases as the buildings increases. As we are iterating on building array and point array is used as maximum possibl""}]",835471,0,26,2665,4,7,4,92,58,147.62753049663175,3.9360234149283895,8.3184290487085,0.2217847267443397,35,6,2,2,2,17.53506263594954,0.4687852582988243,1588,java,0,0,0,0,0,4.118758398220243
71,4,intermediate,0,0,0,0,True,True,70.6,0.8,0,2386,"[{""question"":""Describe any other corner cases you considered."",""answer"":""Considered the first array as null.""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""I have copied all the elements for the first array by iterating through it.""}]",835685,3,5,491,2,0,0,16,13,36.31882150436526,1.2015640014585862,2.0464715409140037,0.0677050199240688,21,5,2,0,1,12.457684497691119,0.3337414350924993,1661,java,0,0,0,0,0,4.118758398220243
71,2,intermediate,1,0,3,0,True,True,73.7,1,ACCEPTABLE,2346,"[{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""en.wikipedia.org/wiki/Daylight_saving_time_in_the_United_States""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""Used google to find which day and time the daylight saving starts.""}]",835696,0,0,394,0,0,1,12,11,18.464608725080346,0.12008135493412032,1.0404328858921692,0.006766273389061758,21,2,2,0,2,13.354520894513584,0.12008135493412032,1621,java,100,0,27.777777777777768,0,31.944444444444446,4.118758398220243
74,11,intermediate,0,0,0,0,True,False,66.7,1,0,3754,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""1""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""1""},{""question"":""Describe in words the algorithm you developed."",""answer"":""1""}]",834347,12,201,2779,43,31,34,163,106,741.1319210723186,25.424623548956127,41.76086452461367,1.4326116976327803,60,19,4,3,3,8.438546552271452,0.07665072559547087,4565,java,0,0,0,0,0,0.8608507396449705
74,4,intermediate,0,0,0,0,True,False,72.39999999999998,0.95,0,3752,"[{""question"":""Describe any other corner cases you considered."",""answer"":""""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""1""}]",834345,1,15,485,8,0,4,78,42,442.7515318836384,5.2145215505345215,24.94790227670356,0.2938247858997583,17,4,2,0,1,6.1886124660403175,0.11816912253086173,4565,java,0,0,0,0,0,0.8608507396449705
73,4,intermediate,5,0,0,0,True,True,68.7,1,FAILED,3463,"[{""question"":""Describe any other corner cases you considered."",""answer"":""NA""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""checked against with null""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""just copy reference""}]",811945,2,32,614,12,0,6,226,202,370.23685557676833,7.2349759445839235,20.861888050092066,0.4076721588559478,15,3,2,0,1,7.068160707976982,0.18749694336689807,4211,java,0,0,0,0,0,2.6726760937500003
75,13,easy,5,0,0,0,True,True,63.9,0.95,FAILED,3833,0,837380,3,20,439,16,8,8,27,14,210.06362418478284,4.252734415550702,11.836541244151961,0.2396305714777669,39,4,4,2,2,12.38332612084828,0.11024322258396224,4705,java,4,0,0,0,0.8,2.0097998527245955
75,10,easy,6,0,0,0,True,True,66.40000000000002,0.9333333333333332,PASSED,3832,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""I have used just one for loop with if loops.So It will not taku Much time complexity""}]",837379,1,41,474,15,0,0,56,35,351.69409341747337,10.289709159563532,19.81705142056725,0.5797984650134625,30,9,3,0,0,16.010727348702982,0.7823476541945011,4705,java,16.666666666666668,0,0,0,2.7777777777777786,2.0097998527245955
76,11,intermediate,0,0,0,0,True,True,65.5,0.7666666666666668,FAILED,3474,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""O(N) times will take O(N2)""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""O(N) times will take O(N2)""},{""question"":""Describe in words the algorithm you developed."",""answer"":""BuildingEvent class implements IComparable, the method can simply call the list’s Sort method to sort it.""}]",812403,21,9,4346,2,0,5,90,85,115.41902193824579,2.8854086206878287,6.503562998275131,0.16258530375044908,90,11,4,0,6,8.435359075880031,0,4388,cs,0,0,0,0,0,1.4377413228552718
76,4,intermediate,0,0,0,0,True,True,66.90000000000002,0.55,FAILED,3475,"[{""question"":""Describe any other corner cases you considered."",""answer"":""It is ok as array""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""yes""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""There is no issue in VS2019 to compile and execute however here some issue""}]",812404,1,0,180,0,0,0,22,12,85.8747462838905,0.06881887056240173,4.838819572713001,0.003877765143532317,13,2,2,0,0,7.29132494604759,0,4388,cs,0,0,0,0,0,1.4377413228552718
77,12,easy,0,0,0,0,True,False,58.3,1,0,3391,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""NA""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""NA""}]",781484,0,8,164,8,0,1,176,161,235.33529821531903,1.2249637185403086,13.260534632498324,0.06902353338595049,19,4,4,0,0,9.341113621115824,0,3481,java,0,0,0,0,0,0.9909683636363636
77,4,intermediate,0,0,0,0,True,True,56.89999999999999,1,FAILED,3389,"[{""question"":""Describe any other corner cases you considered."",""answer"":""Add more null value checks""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""""}]",781485,0,36,570,18,0,9,440,409,561.1248379564988,22.55443596179953,31.617931535579586,1.270884059705581,26,5,2,0,1,16.29080827031341,0.29943304068611,3481,java,0,0,0,0,0,0.9909683636363636
78,6,easy,0,0,0,0,True,False,69.39999999999999,1,0,3772,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""Reading and looping input parameters and mapping those input parameters to newly created Map key and values.""}]",834365,0,15,180,10,3,13,32,18,214.7352100604633,2.4070591131510097,12.099773010754488,0.13563154772985062,15,3,2,0,2,16.574718273922752,0.07554616117189081,4613,java,0,0,0,0,0,1.5854118764845606
79,14,difficult,0,0,0,0,True,False,68.30000000000001,1,0,3533,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""Loss""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""Display error""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""Array""}]",820226,0,23,1172,12,0,0,165,94,623.8754751843336,8.778218877270572,35.153767444945395,0.4946299017463742,51,13,8,0,1,8.612194334411196,0,4382,cs,0,0,0,0,0,2.4084400295420973
79,6,easy,0,0,0,0,True,True,67.80000000000001,0.8,0,3532,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""Array Max length handled for exception""}]",820225,0,2,354,1,0,4,72,45,275.4252907979995,1.7198572756303534,15.519501897888473,0.096909503756568,28,4,3,0,2,6.50640242588701,0,4382,cs,0,0,0,0,0,2.4084400295420973
79,0,intermediate,4,0,2,0,True,True,69.19999999999999,1,FAILED,3531,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""Not clear about logic""},{""question"":""Is your solution exact or approximate?"",""answer"":""Not clear about logic""},{""question"":""How did you estimate the area under the curve?"",""answer"":""Not clear about logic""}]",820224,1,0,122,0,0,0,40,21,148.09556737333358,0.7503370475219725,8.344801714687035,0.04227954956254825,11,2,2,0,0,6.020903573584625,0.7503370475219725,4382,cs,6.25,0,0,0,1.0416666666666667,2.4084400295420973
80,14,difficult,14,0,0,0,True,True,58.2,0.9333333333333332,FAILED,3824,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""unless we received price value for product we cannot return the amount""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""we can use array list to input the coins""}]",837070,4,152,1076,96,12,24,123,76,917.2080104465241,13.295605252710226,51.68229619596986,0.7491729258238149,59,14,8,1,2,6.476179957945001,0.1148028314176968,4741,java,2.5510204081632653,0,0,0,0.1822157434402332,0.3014814871016692
80,6,easy,0,0,0,0,True,False,62.9,1,0,3825,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""Adding corresponding key and values in hash from the corresponding list passed to that function.""}]",837071,0,2,238,2,0,2,19,13,98.33197538851448,0.37431631039601065,5.540752173642645,0.02109175476504096,18,2,2,0,2,6.242558509530376,0.027261781500226224,4741,java,0,0,0,0,0,0.3014814871016692
81,14,difficult,0,0,0,0,True,False,67,0.9333333333333332,0,3700,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""yes""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""-1""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""did not use yet. will track using list.""}]",834137,0,23,921,16,2,4,100,60,665.1771137179798,8.979675184991871,37.48100782200623,0.5059814429972297,53,0,0,0,0,11.209858059197854,0,4524,java,0,0,0,0,0,1.1104216363636363
81,6,easy,0,0,0,0,True,False,69.69999999999999,0.9,0,3698,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""I was not able to type complete within given timelines""}]",834135,0,17,371,10,0,6,39,23,230.0211372334305,1.2856218891913849,12.961095422667038,0.0724414642223465,18,4,2,0,0,13.72140297156752,0.12072757539117494,4524,java,0,0,0,0,0,1.1104216363636363
81,2,intermediate,0,0,0,0,True,False,68,1,0,3699,"[{""question"":""the classes you used in the standard library and why"",""answer"":""""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""www.business.vic.gov.au/victorian-public-holidays-and-daylight-saving/daylight-saving#:~:text\u003dWhen%20does%20Daylight%20Saving%20begin,are%20put%20back%20one%20hour.""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""google search""}]",834136,4,0,1788,0,0,3,28,17,73.16005755149956,1.499474254336291,4.122379788473566,0.0844914912083157,17,2,2,0,2,11.009922619509439,0.048081264169047386,4524,java,0,0,0,0,0,1.1104216363636363
82,12,easy,0,0,0,0,True,False,66.40000000000002,1,0,3741,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""to get the correct data at 62th index""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""calculation logic""}]",834279,0,1,498,1,0,0,84,48,291.7234033565757,0.7965951766607393,16.437858335134944,0.04488607534992914,29,3,3,0,1,8.143287571092259,0,4500,cs,0,0,0,0,0,2.1805325231481483
82,15,intermediate,0,0,0,0,True,True,71.2,1,FAILED,3740,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""I will re write code and distribute in classes""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""ok""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""""}]",834278,0,10,1092,6,0,4,54,36,165.5720430419734,5.777291287343206,9.329555861708258,0.3255354032260449,28,6,4,0,2,6.50640242588701,0,4500,cs,0,0,0,0,0,2.1805325231481483
83,15,intermediate,0,0,0,0,True,False,48,1,0,3521,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""no""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""n/a""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""N/A""}]",813216,0,0,7,0,0,0,1,1,4.444001281719912,0,0.2504079640836378,0,10,2,2,0,0,4.444001281719912,0,4430,java,0,0,0,0,0,1.1708072423398328
84,0,intermediate,4,0,2,0,True,True,70.6,0.95,FAILED,3457,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""based on in""},{""question"":""Is your solution exact or approximate?"",""answer"":""s""},{""question"":""How did you estimate the area under the curve?"",""answer"":""s""}]",811939,0,21,157,14,0,7,289,265,433.2151730198866,2.2440923328720825,24.4105531499907,0.12644879167827755,16,3,2,0,1,14.031533596261294,0.1936777360266664,4173,java,18.75,0,25,0,7.291666666666668,0.8996393801276208
85,9,easy,0,0,0,0,True,True,71,1,FAILED,3645,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Was trying to use copyOF operator but was not able to import it.""}]",834103,0,0,186,0,0,0,55,28,294.06909572462104,0.4362316592496189,16.570032025692793,0.024580524337573552,13,1,1,0,0,10.318972060505274,0,4644,js,0,0,0,0,0,1.372019452887538
86,1,easy,2,0,0,0,True,True,70.1,0.3,ACCEPTABLE,2732,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Tested it with multiple inputs""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""None""}]",835624,0,3,84,2,0,0,14,9,51.82121666907736,0.18918954221972065,2.919991363598035,0.01066034078073462,12,3,2,0,0,9.991420924144991,0.18918954221972065,1882,java,37.5,0,0,0,18.75,1.163776251788269
87,14,difficult,14,0,0,0,True,True,68.5,0.9666666666666665,FAILED,3621,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""it should return -1""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""""}]",833014,0,58,689,40,5,10,57,40,308.2257793846787,9.218992298608127,17.367724489930605,0.5194663426163015,53,14,8,1,2,6.287998983835784,0.12567598048348388,4626,java,3.0612244897959178,0,0,0,0.21865889212827988,2.737998872180451
87,6,easy,0,0,0,0,True,False,71.2,1,0,3620,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""best test and compile""}]",833013,0,24,155,16,0,16,47,26,291.3176630736258,0.5760981102187506,16.414995920891705,0.032461636652921365,16,0,0,0,0,11.862545819163818,0,4626,java,0,0,0,0,0,2.737998872180451
87,0,intermediate,4,0,2,0,True,True,61.8,1,FAILED,3622,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""""},{""question"":""Is your solution exact or approximate?"",""answer"":""not really""},{""question"":""How did you estimate the area under the curve?"",""answer"":""""}]",833015,0,10,233,10,0,5,35,18,221.6850796698943,3.538298835975994,12.491380165933082,0.19937397666396456,10,2,2,0,1,6.281673668982683,0.2934369598463924,4626,java,6.25,0,0,0,1.0416666666666667,2.737998872180451
88,14,difficult,0,0,0,0,True,False,67.7,1,0,2403,"[{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""if request coffee s pressed it should check the coffee amount 35 pense with all the coints entered. if amount is more then it should serve coffee.""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""I used array and recursion to track how many coins are entered and subtract it from the coffee and tea amount""}]",835434,0,4,809,0,0,0,27,25,32.89008896097422,0.7657801952046543,1.8532713411054245,0.04314973094304657,53,12,8,1,2,11.099991462917984,0.2932520911679101,1678,java,0,0,0,0,0,3.0990016949152546
88,12,easy,0,0,0,0,True,False,70.3,1,0,2469,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""for median, I am taking the finding the elements at even lengts and taking the average of that.""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""I am sorting the array. The first element is the minimum element. Last element is the largest element.""}]",835378,0,3,876,0,0,0,34,20,45.664336668955954,1.0536983553279626,2.573067119386073,0.059373173676006724,19,0,0,0,0,9.737269135964466,0,1723,java,0,0,0,0,0,3.0990016949152546
88,13,easy,0,0,0,0,True,False,65.5,1,FAILED,2723,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""A Hamiltonian cycle is a graph cycle through a graph that visits each node exactly once""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""HamiltonianCycle.getApproximateOptimalForCompleteGraph(g) to calculate the""}]",835516,0,3,159,2,0,0,8,8,13.956608766220993,0.06213723091163476,0.7864187620820582,0.0035012720519188227,46,7,6,2,2,13.956608766220993,0.06213723091163476,1857,java,0,0,0,0,0,3.0990016949152546
88,6,easy,7,0,0,0,True,True,58.3,1,FAILED,2435,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""copying the keys array as map keys and values array as map values""}]",835892,0,7,351,4,2,6,26,16,100.55380812623591,1.0211521105226724,5.665946694777408,0.05753927706265871,17,3,2,0,2,12.039222633329976,0.05487375642895715,1704,java,11.224489795918366,0,0,0,1.6034985422740526,3.0990016949152546
88,10,easy,6,0,0,0,True,True,67.5,0.9333333333333332,PASSED,2436,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Adding the solution to satisfy all conditions of dividing by  2 and 7  and when the number is not divisible by both 2 \u0026 7.""}]",835934,1,45,2349,0,0,0,73,42,96.60162504685564,5.047642164531677,5.4432514127881095,0.2844215646476872,27,13,3,0,0,14.202049141842792,1.2461004151256692,1704,java,16.666666666666668,0,0,0,2.7777777777777786,3.0990016949152546
88,8,easy,1,1,0,1,True,True,61.4,1,ACCEPTABLE,2364,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""While multiplication and squaring are both O(n^2) it turns out that squaring can be done roughly twice as fast as multiplication. Half of the partial results when squaring are needed twice, but only need to be calculated once.""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""The observation was that the Mandelbrot calculations can be done using three squaring operations rather than two squares and a multiply. At the limit this gives approximately a one-third speedup!""}]",835903,0,13,1777,0,4,4,71,38,89.89375174280615,1.7944182129082036,5.065280122746551,0.10111081948991732,57,11,6,1,2,16.569899146837894,0.14728146350033386,1627,java,100,100,0,50,83.33333333333333,3.0750933862433865
88,1,easy,2,0,0,0,True,True,69.8,0.2,ACCEPTABLE,2746,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""compute the sum of the array and then divide it by array length will give the Average.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""No.""}]",835748,0,1,119,0,0,0,6,5,13.386560415361748,0.2704978756887546,0.7542980137026484,0.015241854816467419,12,3,2,0,0,9.680203477915027,0,1904,java,37.5,0,0,0,18.75,3.0750933862433865
88,1,easy,3,0,0,0,True,True,63.1,0.25,ACCEPTABLE,1943,"[ { ""question"":""Please Describe the core idea or algorithm you used."" ,""answer"": ""Computing Array Average.""}]",835847,0,5,143,4,0,0,15,10,51.822284696104845,1.034027432204876,2.9200515441552817,0.0582647680976466,9,2,1,0,0,4.639478725592647,0,1353,0,22.222222222222207,0,0,0,7.407407407407406,2.83471541218638
88,15,intermediate,5,0,0,0,True,True,58.9,1,FAILED,1942,"[ { ""question"":""Please Describe the core idea or algorithm you used."" ,""answer"": ""Still 2 test cases are failing.""}]",835752,0,21,2331,8,0,9,87,61,143.09235676545788,1.632198384646263,8.062883753197395,0.09197015225020204,38,7,4,0,2,8.298089428012018,0.036483681695703166,1353,0,12,0,0,0,2.4,2.83471541218638
88,15,intermediate,0,0,0,0,True,True,66.90000000000002,1,0,2295,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Using the builder design pattern and java Pattern Matching to solve this problem.""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""Builder pattern solves the issue with a large number of optional parameters by providing a way to build the object step-by-step and provide a method that will actually return the final Object.""}]",835725,0,33,2360,24,0,15,103,88,198.80642814377617,2.465687221624624,11.202227398763528,0.1389350898195753,38,8,6,0,3,23.100590713561072,0.2052646237218176,1557,0,0,0,0,0,0,2.83471541218638
88,0,intermediate,4,0,2,0,True,True,70.1,1,FAILED,2330,"[{""question"":""Is your solution exact or approximate?"",""answer"":""Approzimate""},{""question"":""How did you estimate the area under the curve?"",""answer"":""Get the no. of rectangels in the Area  and then multiply it with the function value.""}]",835499,21,88,3714,20,0,12,163,87,479.6199840667769,18.340414029908167,27.025344083048342,1.0334348364325576,20,10,2,0,1,15.363605325726668,0.9367948951103704,1598,java,18.75,0,0,0,3.125,2.83471541218638
88,3,intermediate,5,0,0,0,True,True,61.5,1,FAILED,2441,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""using the Long.Max value to reproduce the error""},{""question"":""Describe the faults you found in words."",""answer"":""using the Long.Max value to reproduce the error""}]",835876,2,16,2004,4,0,8,78,40,81.4031402948022,3.2867750610052022,4.5868561548540265,0.18520126328781292,57,10,2,1,3,18.873449020617077,0.08477686252944219,1707,java,4,0,0,0,0.8,2.83471541218638
88,4,intermediate,5,0,0,0,True,True,64,0.55,PASSED,2385,"[{""question"":""Describe any other corner cases you considered."",""answer"":""1. If an array is null then return the null array itself. 2.If in the array any row is null in new target array make that row null otherwise copy all the elements of that row. 3. If both rows are null of an array then make both rows null in the target array as well.""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""I created a new target array and while copying all the elements of an array I considered all the null values cases. Case 1. If an array is null then return the null array itself.  Case2. If in the array the first row is null then make the first row as null in the new target array. If the second row is null then make the second row as null in the target array. Case3. if both rows are null then make both rows as null in the target array. Case4. If none of the rows are null then copy the array completely.""}]",835651,1,21,1999,0,0,0,82,54,51.753314021112594,2.4360152838511646,2.9161652252252384,0.13726315296419422,37,9,2,0,1,15.771472842189338,0.830665459844249,1646,java,20,0,0,0,4,2.83471541218638
89,1,easy,2,0,0,0,True,True,76.2,0.55,ACCEPTABLE,3165,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Tested on a different set of inputs to ensure accuracy.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Sent null, character values to check the output.""}]",731264,0,32,201,14,0,0,218,200,260.84836656426546,2.562025933702413,14.698129965574784,0.1443635267673933,18,5,2,0,0,9.64668680233698,0.2805416507009664,2727,java,37.5,0,0,0,18.75,3.0311657142857142
89,3,intermediate,5,0,0,0,True,True,74.59999999999998,1,FAILED,3164,0,731266,18,36,534,18,9,15,1030,988,475.27433034278226,34.035552297693435,26.780477749162674,1.9178152338491503,52,12,6,3,5,11.993877981727495,0.3604401978919615,2727,java,4,0,0,0,0.8,3.0311657142857142
90,12,easy,0,0,0,0,True,False,52.90000000000001,1,0,3616,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""it should be total odd""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""""}]",833009,0,37,479,37,10,12,55,31,356.3989434954233,8.301496351559027,20.08215753882702,0.4677678219384142,23,3,3,1,2,19.747208568117113,0.08956284801640531,4634,java,0,0,0,0,0,1.6038586734693878
90,3,intermediate,5,0,0,0,True,True,66.7,0.95,FAILED,3615,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""to avoid code breaking""},{""question"":""Describe the faults you found in words."",""answer"":""""}]",833008,2,0,113,0,0,0,2,2,22.664208928413657,0.5285286590194238,1.2770694821073103,0.02978122126321442,39,10,6,3,5,7.222609501645097,0,4634,java,12,0,0,0,2.4,1.6038586734693878
90,15,intermediate,0,0,0,0,True,False,65.3,1,0,3614,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""I would have used Pattern and would have completed builder implementation which i could not complete due to less time""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""by adding it in my regex""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""becasue there were manipuations and operations present""}]",833007,0,21,281,21,2,4,53,31,273.47469111598195,2.3537691386947937,15.409590657060216,0.13262879566842775,18,3,3,1,1,17.128386355846224,0.2403676248956362,4634,java,0,0,0,0,0,1.6038586734693878
91,14,difficult,14,0,0,0,True,True,65.10000000000001,0.9,FAILED,3675,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""Question not clear and  Coffee/Tea pressed values missing""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""funds will be returned back""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""Array""}]",834094,0,1,215,0,0,0,30,17,123.54841579059656,1.0663511988492609,6.961633290058068,0.060086128642754824,33,9,8,0,1,9.630922041570912,0,4602,cs,3.0612244897959178,0,0,0,0.21865889212827988,3.3028686
91,6,easy,7,0,0,0,True,True,49,0.9,FAILED,3676,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""correction""}]",834095,0,3,200,2,0,1,39,22,156.6576132076749,2.0486661596238345,8.827250825263892,0.11543703288940277,15,3,2,0,1,6.188511723173757,0,4602,cs,11.224489795918366,0,0,0,1.6034985422740526,3.3028686
91,0,intermediate,0,0,0,0,True,False,63.9,1,0,3674,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""Checked all the conditions perfectly.""},{""question"":""Is your solution exact or approximate?"",""answer"":""approximate""},{""question"":""How did you estimate the area under the curve?"",""answer"":""Multiplied function result with difference between 2nd and 3rd""}]",834093,0,6,246,2,0,0,37,23,172.28124419769017,3.1015558534773278,9.707601972752679,0.17476464058542482,18,4,2,0,0,5.706995441027389,0,4602,cs,0,0,0,0,0,3.3028686
92,10,easy,6,0,0,0,True,True,76.59999999999998,0.5333333333333332,FAILED,3669,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""1""}]",834091,0,8,108,6,0,0,32,16,194.0622381919049,0.6953061644445504,10.934904580482442,0.039178701808560035,16,4,3,0,0,15.545918948246946,0.3704072906364597,4515,java,0,0,0,0,0,1.2041873082287309
92,15,intermediate,0,0,0,0,True,True,62.2,0.95,FAILED,3668,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""1""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""1""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""1""}]",834090,1,14,468,14,0,0,33,22,158.2897852524293,5.288441841570693,8.9192194933294,0.2979900028764001,9,2,2,0,0,9.9733742683115,0.4382620683848287,4515,java,0,0,0,0,0,1.2041873082287309
93,9,easy,0,0,0,0,True,False,68.89999999999999,1,0,3652,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Used java 8 unmodifiableMap""}]",834110,0,3,718,2,0,2,19,10,80.904943373448,0.262886756179221,4.558784048461486,0.01481298794178417,17,0,0,0,0,9.061589957045653,0,4568,java,0,0,0,0,0,2.489895842450766
93,4,intermediate,0,0,0,0,True,True,71.1,0.95,FAILED,3651,"[{""question"":""Describe any other corner cases you considered."",""answer"":""Nope""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""No corner case considered""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""used clone method""}]",834109,3,11,357,8,0,4,41,23,226.4583366730788,1.7580738019549929,12.760340837283927,0.09906290604982704,16,3,2,0,1,5.638518140760026,0.0222699196640357,4568,java,0,0,0,0,0,2.489895842450766
93,11,intermediate,4,0,0,0,True,True,68.60000000000001,0.9666666666666665,FAILED,3650,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""Did not understood the problem""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""did not understood problem""},{""question"":""Describe in words the algorithm you developed."",""answer"":""""}]",834108,31,55,785,28,24,33,108,56,704.3389608801707,18.459053071775752,39.687676496467894,1.0401198392153193,15,3,2,2,2,26.73788456432053,1.4330960344013914,4568,java,6.25,0,0,0,1.5625,2.489895842450766
94,12,easy,0,0,0,0,True,True,61.7,0.9333333333333332,FAILED,3526,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""Unlike the mean, the median value doesn\u0027t depend on all the values in the dataset. Consequently, when some of the values are more extreme, the effect on the median is smaller.""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Min and Max were easy but percentile was tough and could not test due to lack of time but program should work""}]",820219,0,3,688,1,0,0,44,31,139.7367904034944,0.12673034685943182,7.873806278241847,0.007140926865890059,35,5,3,0,1,7.8021546515635585,0,4395,cs,0,0,0,0,0,1.6976350241545892
94,3,intermediate,5,0,0,0,True,True,78.2,1,FAILED,3527,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""number length was easy to detect but stream i need to do some research.""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""as code is written well balanced and need to put our patch to satisfy test cases.""},{""question"":""Describe the faults you found in words."",""answer"":""""}]",820220,1,1,273,0,0,0,40,23,153.53677155919095,1.6066049708319845,8.65139948007215,0.09052802965821592,53,12,7,0,2,1.8627179963594136,0,4395,cs,4,0,0,0,0.8,1.6976350241545892
94,15,intermediate,0,0,0,0,True,False,67.80000000000001,1,0,3525,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""i could write proper method with chaining method to match the requirement""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""regex match""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""gives you sequential development""}]",820218,0,2,183,2,0,1,18,13,79.6199656146059,2.1834010220610858,4.486378879316288,0.12302899347968947,18,4,4,0,1,12.182295574734411,0.06899707228168163,4395,cs,0,0,0,0,0,1.6976350241545892
95,4,intermediate,5,0,0,0,True,True,47.9,0.8499999999999999,PASSED,3800,0,836886,15,27,526,14,0,7,53,31,333.9855541172145,3.553747079068573,18.819221088853947,0.20024444515761566,20,5,2,0,1,5.203742272373341,0.13350397698898145,4747,java,20,0,0,0,4,1.2085817278287465
96,14,difficult,14,0,0,0,True,True,61.6,1,FAILED,3518,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""we need to check the data""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""we need track in data in data structure format (type of list - FIFO, LIFO)""}]",813213,8,4,565,0,0,2,89,47,383.71747970800993,8.649718498966685,21.621486310598087,0.4873892381922451,34,10,8,0,1,6.933908407762762,0.28002263649296705,4379,cs,3.0612244897959178,0,0,0,0.21865889212827988,1.892458614864865
96,6,easy,0,0,0,0,True,False,57.9,1,0,3516,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""requrie timing""}]",813211,0,5,407,0,0,2,56,30,196.71635739474218,4.375064500104801,11.084457324481779,0.2465235549576268,14,3,2,0,0,1.1333556424303173,0,4379,cs,0,0,0,0,0,1.892458614864865
96,0,intermediate,0,0,0,0,True,False,51.8,0.95,0,3517,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""na""},{""question"":""Is your solution exact or approximate?"",""answer"":""no""},{""question"":""How did you estimate the area under the curve?"",""answer"":""using formula""}]",813212,0,4,633,0,0,0,86,46,278.9634093733627,4.04755338293382,15.718865717333706,0.22806915162455585,15,4,2,0,0,9.70910729360199,0,4379,cs,0,0,0,0,0,1.892458614864865
97,1,easy,2,0,0,0,True,True,52.90000000000001,0.05,PASSED,2884,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""First dummy answer""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Second Dummy Answer""}]",645601,0,2,45,2,0,0,14,11,27.69229263944128,0.18317218868548185,1.5603889785484202,0.010321278491558802,9,2,2,0,0,9.699881517662416,0.18317218868548185,2035,java,50,0,0,0,25,2.9860948192771084
97,1,easy,2,0,0,0,True,True,51.5,0.05,PASSED,2886,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""First dummy answer""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Second dummy answer.""}]",645602,0,2,65,2,0,0,23,20,39.75157558301,0.1877416631797388,2.2398983438199993,0.010578756546244728,9,2,2,0,0,9.941857996244432,0.1877416631797388,2036,java,50,0,0,0,25,2.9860948192771084
97,1,easy,2,0,0,0,True,True,55.3,0.1,PASSED,2824,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Because I am confident on it. :)""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""No. all cases covered.""}]",835326,0,2,62,2,0,0,7,4,26.11959542568697,0.19115291654989414,1.4717715631943422,0.010770971839905368,9,2,2,0,0,10.122500886165069,0.19115291654989414,1972,java,50,0,0,0,25,3.4350177443609033
97,1,easy,2,0,0,0,True,True,52.40000000000001,0.05,PASSED,2846,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""This is a model answer""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""this is second mosel answer""}]",644981,0,2,66,2,0,0,14,11,28.48868708262159,0.18223308837088253,1.6052637430865442,0.010268362620715916,9,2,2,0,0,9.650151469393718,0.18223308837088253,2001,java,50,0,0,0,25,3.4350177443609033
97,1,easy,2,0,0,0,True,True,69.3,0.1,ACCEPTABLE,2847,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""fdmkfldklf""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""vkdmvkldmvkldmvkld""}]",644982,0,1,146,0,0,0,24,14,59.9005220606256,0.22668933493835364,3.3752393003233285,0.012773356991341364,12,3,2,0,0,6.424073893707888,0,2001,cs,37.5,0,0,0,18.75,3.4350177443609033
97,1,easy,2,0,0,0,True,True,52.2,0.1,PASSED,2870,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""sample answer 1""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""sample answer 2""}]",644991,0,2,61,2,0,0,13,11,27.804880889174623,0.19010787001649748,1.5667330348634885,0.010712086173990516,9,2,2,0,0,10.067160456882991,0.19010787001649748,2026,java,50,0,0,0,25,3.4350177443609033
97,1,easy,2,0,0,0,True,True,51.3,0,PASSED,2871,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""first answer""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""second answer""}]",645594,0,0,24,0,0,0,4,2,13.327619219055554,0,0.7509768299243272,0,6,4,2,0,0,7.5133294590745585,0,2026,py,50,0,0,0,25,3.4350177443609033
97,1,easy,2,0,0,0,True,True,56.89999999999999,0.2,ACCEPTABLE,2872,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""randome first answer""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""random second answer""}]",644992,0,1,197,0,0,0,27,16,76.9092327076539,0.2523166689344817,4.3336360996963705,0.01421739089773534,12,3,2,0,0,5.9211885782925995,0,2027,cs,37.5,0,0,0,18.75,3.4350177443609033
97,1,easy,2,0,0,0,True,True,53.90000000000001,0.05,PASSED,2873,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""First answer""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Second Answer""}]",645595,0,0,74,0,0,0,7,4,10.265763103768627,0,0.5784491667798863,0,9,2,2,0,0,10.265763103768627,0,2027,java,50,0,0,0,25,3.4350177443609033
97,1,easy,2,0,0,0,True,True,52.2,0.05,PASSED,2906,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""sample answer 1""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""sample answer 2""}]",645010,0,2,60,2,0,0,13,11,27.775537054567863,0.18317218868548185,1.5650795857718984,0.010321278491558802,9,2,2,0,0,9.699881517662416,0.18317218868548185,2049,java,50,0,0,0,25,3.4350177443609033
97,1,easy,2,0,0,0,True,True,51.1,0,PASSED,2878,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""test 1""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""test2""}]",645598,0,0,24,0,0,0,4,2,14.18418822425723,0,0.7992422752049113,0,6,4,2,0,0,7.039394320631193,0,2030,py,50,0,0,0,25,3.4350177443609033
97,1,easy,2,0,0,0,True,True,52.2,0,PASSED,2879,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""sample answer 1""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""sample answer 2""}]",644995,0,2,53,2,0,0,13,11,27.59163154482533,0.1856495776945885,1.5547169865377757,0.010460872946800162,9,2,2,0,0,9.831071629185058,0.1856495776945885,2030,java,50,0,0,0,25,3.4350177443609033
97,14,difficult,14,0,0,0,True,True,69.3,0.1,PASSED,2534,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""jkkjkjh""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""kbnbmb""}]",835606,4,23,2199,14,0,0,62,52,95.65999561754185,2.4383575394629573,5.3901930328804335,0.13739513300243705,41,16,7,0,0,5.814289759980997,0,1769,py,7.142857142857142,0,0,0,0.5102040816326531,3.687183925549916
97,14,difficult,14,0,0,0,True,True,68.60000000000001,0.1,PASSED,2535,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""vmmdnvm,dnm""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""ndbvfm,n,mf""}]",835327,2,7,119,1,1,1,78,52,26.289576347604427,3.175414848285339,1.4813495479634955,0.1789264036783419,56,15,7,0,1,26.289576347604427,3.175414848285339,1769,java,7.142857142857142,0,0,0,0.5102040816326531,3.687183925549916
97,14,difficult,14,0,0,0,True,True,65.8,0.033333333333333326,PASSED,2387,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""sample answer 1.""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""sample answer 2.""}]",835433,2,15,1392,7,0,1,56,56,25.22678401331757,2.145259145728682,1.4214639521228325,0.12087979752018002,56,15,7,0,1,25.22678401331757,2.145259145728682,1662,java,7.142857142857142,0,0,0,0.5102040816326531,3.843220342205323
97,14,difficult,14,0,0,0,True,True,68.8,0.033333333333333326,PASSED,2388,"[{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""answer 1.""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""answer 2.""}]",835785,4,23,2192,14,0,0,42,42,45.10585891184938,2.4383575394629573,2.541598344001533,0.13739513300243705,41,16,7,0,0,27.23621572183408,0.3262327957234427,1663,py,7.142857142857142,0,0,0,0.5102040816326531,3.843220342205323
97,7,easy,1,1,0,0,True,True,69.1,0.1,PASSED,2351,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""first dummy answer.""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""second dummy answer.""}]",835310,0,12,1428,6,0,0,57,30,99.35886055168136,1.476900786816547,5.59861449337555,0.08321953476960389,36,12,5,0,0,17.040933750023115,0.19586823566374253,1626,py,100,100,0,0,100,3.8708335271317833
97,12,easy,6,0,0,0,True,True,63,1,PASSED,2450,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""kdjkljdkl""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""dvkdlvkldjvkdj""}]",835510,1,1,85,0,0,0,9,5,13.220122397004411,0.3973602366599805,0.7449196623744407,0.022390220335694648,14,3,2,1,1,13.220122397004411,0.3973602366599805,1713,java,16.666666666666668,0,0,0,2.7777777777777786,3.8708335271317833
97,9,easy,5,0,0,0,True,True,62.6,0.1,PASSED,2451,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""cknslkcnsk csnclnslcks""}]",835911,0,1,202,0,0,1,6,5,12.851497214185695,0.18077556405946013,0.7241485879106931,0.010186234900157643,20,4,2,0,3,12.851497214185695,0.18077556405946013,1713,java,20,0,0,0,4,3.8708335271317833
97,9,easy,5,0,0,0,True,True,68.7,0.2,PASSED,2455,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""cnlkdlnlvn""}]",835463,0,1,134,0,0,0,6,5,14.365069092665902,0.1700843081978344,0.8094344437324518,0.0095838103183243,16,2,1,0,0,14.365069092665902,0.1700843081978344,1715,js,20,0,0,0,4,3.8708335271317833
97,12,easy,6,0,0,0,True,True,67.5,0,PASSED,2454,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""sldskmfklsmf""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""kdmvkldnlkvd""}]",835862,0,2,432,1,0,0,11,11,19.025397909338785,0.11236027100215584,1.0720319042110684,0.0063312103039372975,11,2,1,0,0,19.025397909338785,0.11236027100215584,1715,js,16.666666666666668,0,0,0,2.7777777777777786,3.8708335271317833
97,9,easy,5,0,0,0,True,True,55.2,0,PASSED,2453,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""dnsnksnfkjs""}]",835343,0,9,864,2,0,0,18,16,51.33701601363314,1.422507341972005,2.892707910544929,0.08015460500933477,10,5,1,0,0,12.625428099164901,0.16171910669650355,1714,py,20,0,0,0,4,3.8708335271317833
97,12,easy,6,0,0,0,True,True,57.3,0.2,PASSED,2452,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""nnasmdnmsa""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""cncldnvkld""}]",835619,0,14,1281,4,0,0,20,20,53.075790378780994,2.527390200176436,2.9906833433083015,0.14241189287555373,8,5,1,0,0,17.7127610577442,0.7101076440900577,1714,py,16.666666666666668,0,0,0,2.7777777777777786,3.8708335271317833
97,10,easy,6,0,0,0,True,True,51.2,0.7333333333333331,PASSED,2524,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""kdklbkl""}]",835917,85,10,1065,6,0,0,105,60,171.28297885850887,4.49124767174624,9.651352305987757,0.2530701758128423,31,7,3,0,1,5.56435993285664,0,1764,cs,16.666666666666668,0,0,0,2.7777777777777786,3.8708335271317833
97,10,easy,6,0,0,0,True,True,70.8,0.2666666666666666,PASSED,2525,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""cvkldvlkd""}]",835426,29,4,1231,0,0,0,41,28,103.51619555705463,1.8958153781602445,5.8328695551351775,0.10682428717478464,26,6,2,0,0,8.38298922027686,0,1764,js,16.666666666666668,0,0,0,2.7777777777777786,3.8708335271317833
97,13,easy,5,0,0,0,True,True,65.3,0.1,PASSED,2705,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""fkdldlghl vdlvl""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""vkclvkljblkdvldnvl""}]",835858,0,10,1756,4,2,3,58,58,27.15413458086607,0.3678622117682244,1.5300651655564337,0.020728083020834467,58,10,4,2,3,27.15413458086607,0.3678622117682244,1855,java,20,0,0,0,4,3.8708335271317833
97,10,easy,6,0,0,0,True,True,54,0.6666666666666666,PASSED,2592,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""jhighjk""}]",835679,6,38,229,18,0,0,50,26,218.1560417486653,2.9732334977494137,12.292528017833137,0.16753400814244604,18,7,3,0,0,8.679207311438777,0.348886905561255,1809,java,16.666666666666668,0,0,0,2.7777777777777786,3.8708335271317833
97,6,easy,7,0,0,0,True,True,67.60000000000001,0.3,PASSED,2427,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""jjvlkdsjkl dlkgjkgjlk""}]",835727,0,8,1108,2,0,0,57,32,113.82860901464993,2.1689322006173075,6.4139473485479055,0.1222137128596479,14,3,1,0,0,15.114906393878632,0.6636280662538022,1699,js,14.285714285714285,0,0,0,2.0408163265306123,3.8708335271317833
97,10,easy,6,0,0,0,True,True,67.80000000000001,0,PASSED,2428,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""jjdjog ljdsjwgjor""}]",835639,0,6,652,2,0,0,26,26,23.236663919003448,0.13448219243123247,1.3093258384033266,0.007577723289759252,26,6,2,0,0,23.236663919003448,0.13448219243123247,1699,js,16.666666666666668,0,0,0,2.7777777777777786,3.8708335271317833
97,8,easy,1,1,0,1,True,True,61.5,0.4,PASSED,2526,"[{""question"":""Outline why your solution runs faster than the original version."",""answer"":""hjgjhghj""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""hkjhjkk""}]",835745,20,15,984,6,3,4,58,30,100.55071542229422,2.4947462124733626,5.665772428919129,0.14057248870302969,53,11,6,0,1,16.021803998423948,0.4560669098560447,1765,java,100,100,0,100,100,3.8708335271317833
97,7,easy,1,1,0,0,True,True,64.7,0.15,PASSED,2527,"[{""question"":""Outline why your solution runs faster than the original version."",""answer"":""hjjhgk""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""jhjgjh""}]",835581,8,2,262,0,0,0,30,16,71.8872748742434,0.32695198663780073,4.050661780595473,0.018422897775444997,39,14,5,0,0,6.440797934643617,0,1765,py,100,100,0,0,100,3.8708335271317833
97,6,easy,7,0,0,0,True,True,52.3,0.6,PASSED,2425,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""cnsjcnslvls""}]",835535,0,5,198,1,0,0,23,14,69.74528260698644,0.6114325615241794,3.929966063217299,0.034452641482240504,10,5,1,0,0,14.678790747188275,0.18802062855810847,1698,py,14.285714285714285,0,0,0,2.0408163265306123,3.8708335271317833
97,10,easy,6,0,0,0,True,True,57.6,0.06666666666666668,PASSED,2426,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""jjkhjkd""}]",835291,2,15,889,4,0,0,19,19,35.60797858026602,2.9329138438978357,2.0064173829327387,0.165262100059282,19,12,2,0,0,23.808957805138512,1.5383138809300196,1698,py,16.666666666666668,0,0,0,2.7777777777777786,3.8708335271317833
97,12,easy,8,0,0,0,True,True,67.5,0.2,PASSED,2537,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""bhgjhghjjh""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""hhjghjghj""}]",835935,0,9,666,5,0,0,23,20,72.66280339310471,2.4992476491242885,4.094360804332411,0.14082613300143398,15,1,1,0,0,9.285658295027623,0,1770,js,12.5,0,0,0,1.5625,3.8708335271317833
97,12,easy,8,0,0,0,True,True,65.7,0.4,PASSED,2536,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""dnvjkdjk""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""vdhvjkdvkj""}]",835567,0,2,456,1,0,0,15,13,29.772487735100608,0,1.677602585336405,0,14,5,2,0,0,6.091524043744457,0,1770,py,12.5,0,0,0,1.5625,3.8708335271317833
97,1,easy,2,0,0,0,True,True,55.1,0.1,PASSED,2729,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""dummy answer 1""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""dummy answer 2""}]",835894,0,2,61,2,0,0,7,4,30.634692169184017,0.1812229236605412,1.7261855724410249,0.010211442455200614,9,2,2,0,0,9.596658206721296,0.1812229236605412,1876,java,50,0,0,0,25,3.8708335271317833
97,5,intermediate,4,0,3,0,True,True,56.10000000000001,0,FAILED,2815,"[{""question"":""What other corner cases did you consider?"",""answer"":""bkbkbkj""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""jvjdnlvkdnvl""}]",835782,0,0,19,0,0,0,1,1,6.618149837744921,0.11205411098819766,0.372915605062288,0.006313958979979663,8,1,1,0,0,6.227869321400162,0.11205411098819766,1965,js,12.5,0,33.333333333333336,0,6.547619047619048,3.8708335271317833
97,0,intermediate,4,0,2,0,True,True,56.2,1,FAILED,2322,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""First answer""},{""question"":""How did you estimate the area under the curve?"",""answer"":""Second answer""}]",835604,79,61,1613,10,0,0,295,151,828.8370286294478,17.92616256720243,46.70282021518842,1.0100928392505346,0,9,2,0,0,3.6661560491081966,0,1596,py,12.5,0,25,0,6.25,3.942694422310757
97,11,intermediate,4,0,0,0,True,True,67.80000000000001,0.033333333333333326,PASSED,2303,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""random answer 1""},{""question"":""Describe in words the algorithm you developed."",""answer"":""random answer 2""}]",835670,4,17,1865,5,0,0,45,45,38.49212716198385,1.760455683697853,2.1689316867502133,0.0991971189179401,44,16,4,0,0,26.29036640645784,0.3182533669030661,1576,0,25,0,0,0,6.25,3.9740310483870966
97,2,intermediate,1,0,2,0,True,True,61,1,PASSED,2533,"[{""question"":""the classes you used in the standard library and why"",""answer"":""bnbmn""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""nmbnmbmn""}]",835512,8,0,256,1,0,0,9,5,18.681900570808423,0.5903645240373591,1.0526767187021553,0.033265512127437384,10,2,1,0,1,0.4142131798323365,0,1768,cs,100,0,50,0,50,3.9740310483870966
97,11,intermediate,4,0,0,0,True,True,66.8,0.06666666666666668,PASSED,2301,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""random answer.""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""random answer.""}]",835452,7,14,1890,2,2,2,53,53,29.020296687296053,2.1371557655018862,1.635218567659034,0.1204231930288325,53,14,2,2,2,29.020296687296053,2.1371557655018862,1574,java,25,0,0,0,6.25,3.9740310483870966
97,15,intermediate,8,0,0,0,True,True,67.80000000000001,0.25,PASSED,2529,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""njhjkkj""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""nhkjhjk""}]",835818,59,33,979,21,6,6,43,33,98.06226368093941,3.9542859394476975,5.5255546173635315,0.22281377270855185,32,11,7,2,2,17.380404818579663,0.959677151802348,1766,java,12.5,0,0,0,1.5625,3.9740310483870966
97,15,intermediate,8,0,0,0,True,True,67,0.1,PASSED,2528,"[{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""njjnjk""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""nmnm,n,m,m""}]",835481,1,0,2350,0,0,0,100,63,78.04834240822595,0.9944304461468074,4.397821981496516,0.05603358047323356,34,0,0,0,0,5.141458369493925,0,1766,js,12.5,0,0,0,1.5625,3.9740310483870966
97,3,intermediate,5,0,0,0,True,True,68.60000000000001,0.25,PASSED,2406,"[{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""first answer.\nextended""},{""question"":""Describe the faults you found in words."",""answer"":""second answer.\nextended""}]",835871,46,42,8050,16,7,17,195,143,105.71441690586012,8.058301735219574,5.956733635648343,0.4540644350820325,31,5,1,0,2,23.45446222543139,1.3644493619631095,1681,java,20,0,0,0,4,3.9740310483870966
97,2,intermediate,1,0,3,0,True,True,70.7,0.06666666666666668,PASSED,2339,"[{""question"":""the classes you used in the standard library and why"",""answer"":""first input""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""second input""}]",835349,1,7,945,5,0,0,15,15,31.87947684397471,2.1687531905273163,1.7963259653835342,0.12220362610463965,14,6,4,0,0,23.24521808257332,1.5528013287285891,1613,py,100,0,33.333333333333336,0,33.333333333333336,3.9740310483870966
98,15,intermediate,0,0,0,0,True,False,73.79999999999998,0.8,0,3420,0,808029,0,18,422,18,0,0,40,30,148.89904927136075,3.708569365846005,8.390075838952175,0.20896828009127832,16,3,3,0,0,12.4759605412096,0.1169658259100985,4224,java,0,0,0,0,0,1.5497407407407406
98,3,intermediate,5,0,0,0,True,True,67.90000000000002,1,FAILED,3422,0,808031,1,20,325,12,9,13,92,87,130.0593698313917,9.252857943618029,7.328508689555401,0.5213745840144738,40,10,6,4,6,31.263434431183747,2.1687093130795634,4224,java,4,0,0,0,0.8,1.5497407407407406
99,4,intermediate,5,0,0,0,True,True,74.59999999999998,0.8499999999999999,FAILED,3663,"[{""question"":""Describe any other corner cases you considered."",""answer"":""NA""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""NA""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""""}]",834085,0,0,72,0,0,0,31,16,106.98380813465023,0.0326162945391114,6.028260544187834,0.001837843734448752,12,2,2,0,0,6.280968156812531,0,4495,cs,4,0,0,0,0.8,2.158640290620872
100,14,difficult,14,0,0,0,True,True,65.10000000000001,1,FAILED,3250,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""The machine returns only those coins which are a subset of the coins that the user has entered.""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""I didn\u0027t solve coffee presses. i only solved if the input coins is valid or not. e.g. if coins are 1 or 2 input is valid""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""nothing""}]",732237,0,22,123,16,2,4,108,101,95.34295948501696,3.0790934963509446,5.372328867806253,0.17349894492964849,34,10,8,1,2,20.088651563377496,1.059204235416244,2757,java,3.0612244897959178,0,0,0,0.21865889212827988,1.9899139312977097
101,12,easy,8,0,0,0,True,True,66.2,0.9333333333333332,FAILED,3552,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""1Used linq Max () and Min() function to find the maximum and minimum value  from the list of numbers""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""""}]",822189,2,0,282,0,0,0,31,16,120.71840255452679,1.0538158176820769,6.802169372779512,0.059379792375481716,18,2,2,0,1,5.792149529435878,0,4390,cs,4.6875,0,0,0,0.5859375,1.3428841417910449
102,1,easy,2,0,0,0,True,True,61.4,0,ACCEPTABLE,2849,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""fb""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",644983,0,6,102,4,0,0,29,25,49.72687655911764,0.4848909318151122,2.8019807218840107,0.027322348339073453,12,3,2,0,0,9.724101883955912,0.18412780303127632,2004,java,37.5,0,0,0,18.75,2.9687602523659304
102,1,easy,2,0,0,0,True,True,64.3,0.05,PASSED,3479,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""sdv""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""cx""}]",812520,0,2,75,2,0,0,12,10,35.02289353629834,0.5961516389187029,1.973449355835539,0.03359160106474628,9,2,2,0,0,14.317662088832533,0.2703741789933352,4463,java,50,0,0,0,25,2.9687602523659304
103,1,easy,2,0,0,0,True,True,78.4,1,ACCEPTABLE,3756,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Test""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""yes""}]",834349,10,52,633,22,0,0,140,74,808.8425987448426,14.78344371279804,45.57618586856654,0.8330087701581655,16,4,2,0,0,8.499341226450232,0,4580,js,37.5,0,0,0,18.75,0.5532634529147983
103,15,intermediate,0,0,0,0,True,True,79,1,FAILED,3757,0,834350,32,0,2767,0,0,0,147,89,680.8568370378616,2.1315969716603527,38.364519627026894,0.12010996939085905,39,0,0,0,0,10.911650858264068,0,4580,js,0,0,0,0,0,0.5532634529147983
104,9,easy,0,0,0,0,True,False,69.89999999999999,1,0,3708,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""with proper test cases""}]",834246,0,22,840,10,6,16,48,26,277.21964751058846,3.8976455214595407,15.620609251994667,0.2196222318303792,20,4,2,0,2,19.113394283349802,0.17218698396780216,4530,java,0,0,0,0,0,2.2424205583756343
104,11,intermediate,0,0,0,0,True,False,70.3,0.9666666666666665,0,3709,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""a""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""""},{""question"":""Describe in words the algorithm you developed."",""answer"":""""}]",834247,17,146,7196,35,35,41,299,156,911.8380296035907,34.155887137600196,51.379711681519254,1.924595790459998,20,5,2,2,2,24.144719963702464,1.2054107415792703,4530,java,0,0,0,0,0,2.2424205583756343
104,0,intermediate,4,0,2,0,True,True,72.09999999999998,1,FAILED,3707,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""""},{""question"":""Is your solution exact or approximate?"",""answer"":""not sure""},{""question"":""How did you estimate the area under the curve?"",""answer"":""""}]",834245,2,28,320,18,0,9,50,28,289.69820797780693,2.422774967709313,16.323743819967028,0.13651709543659116,15,3,2,0,1,14.935576934379206,0.20615627700691408,4530,java,12.5,0,25,0,6.25,2.2424205583756343
105,9,easy,0,0,0,0,True,False,70,1,0,3794,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""tried but time is very less to understand problems""}]",836880,0,0,214,0,0,0,19,10,80.17551993103298,0.9137225400229354,4.51768292638905,0.05148589896354,17,2,2,0,1,5.787085260536259,0,4688,cs,0,0,0,0,0,1.2705477203647415
105,4,intermediate,0,0,0,0,True,False,69.6,1,0,3796,"[{""question"":""Describe any other corner cases you considered."",""answer"":""All length scenario need to be handled""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""Null value should be checked for each and every element explicitly with in the loop.""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""We will loop through the arrach for both the di""}]",836882,0,8,250,4,0,0,92,50,338.3704028812735,3.004086544785429,19.06629596174815,0.16927249744618342,19,4,2,0,0,6.60351387544341,0,4688,cs,0,0,0,0,0,1.2705477203647415
105,11,intermediate,0,0,0,0,True,False,69.69999999999999,0.9,0,3795,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""Its depends on input and number of buldings""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""its decrease if we increase the building count since iteration  get increased.""},{""question"":""Describe in words the algorithm you developed."",""answer"":""""}]",836881,0,8,461,6,0,2,101,55,420.9622106307296,5.405551318130176,23.720130449510577,0.3045888186149974,19,4,2,0,1,5.877897472364542,0,4688,cs,0,0,0,0,0,1.2705477203647415
106,1,easy,2,0,0,0,True,True,60.3,0.3,ACCEPTABLE,2852,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Nopes.""}]",645588,0,6,381,4,0,0,24,23,42.42542745097929,0.7378507302605564,2.3905629724000104,0.041575977919309774,11,3,2,0,0,15.025226556548484,0.3676744860852018,2011,java,37.5,0,0,0,18.75,2.59146247848537
106,1,easy,2,0,0,0,True,True,58.5,0.2,ACCEPTABLE,2861,0,645563,0,12,103,8,0,0,58,49,97.40254675031626,0.9857394439237736,5.4883812767192826,0.05554386500409807,11,3,2,0,0,9.991420924144991,0.24449485268791976,2017,java,37.5,0,0,0,18.75,2.59146247848537
106,1,easy,2,0,0,0,True,True,55.90000000000001,0.05,ACCEPTABLE,2869,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""testin""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""testing""}]",645593,0,3,70,2,0,0,13,12,28.28019670132978,0.4146833869876865,1.5935158500053572,0.02336633499680403,11,3,2,0,0,4.442254478316335,0,2024,java,37.5,0,0,0,18.75,2.59146247848537
106,1,easy,2,0,0,0,True,True,61.4,0.15,ACCEPTABLE,2907,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""test""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""test""}]",645613,0,7,72,6,0,0,17,14,45.34439514517798,1.1016178116101742,2.555039243038555,0.062073310945764563,11,3,2,0,0,4.5476039462790965,0,2051,java,37.5,0,0,0,18.75,2.59146247848537
106,14,difficult,14,0,0,0,True,True,63.3,1,FAILED,2392,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""Since it\u0027ll be difficult to keep a check of all transactions and keep a total in the vending machine at all times.""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""returns -1""}]",835594,0,105,1199,72,9,18,98,63,437.59864838132967,11.009976795201268,24.657550635204068,0.6203836810837821,58,14,8,1,2,19.860293463191677,0.7235097665258348,1668,java,4.081632653061225,0,0,0,0.2915451895043732,2.7803014970059885
106,8,easy,1,1,0,1,True,True,58.3,1,FAILED,2813,"[{""question"":""Outline why your solution runs faster than the original version."",""answer"":""test""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""test""}]",835524,0,22,84,12,2,4,19,11,87.27138239973827,0.6728480212134168,4.917516401126103,0.037913243594868785,51,11,6,1,2,18.331014627374355,0.2428980209247401,1963,java,100,0,0,0,33.333333333333336,2.7803014970059885
106,1,easy,2,0,0,0,True,True,68.60000000000001,0.1,ACCEPTABLE,2748,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""test""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""test""}]",835930,0,3,72,2,0,0,9,6,36.355572494738674,0.3431448622932671,2.0485423640515474,0.019335324385721657,11,3,2,0,0,7.056766535989845,0,1906,java,37.5,0,0,0,18.75,2.7803014970059885
106,2,intermediate,0,0,0,0,True,False,68.30000000000001,1,0,2721,"[{""question"":""the classes you used in the standard library and why"",""answer"":""""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""Time was less to determine and find the rules for the DST""}]",835539,0,1,519,0,2,5,13,9,59.256208492268236,1.3914952949544728,3.3389338992543656,0.0784071564683837,16,0,0,0,0,10.299962342625774,0,1870,java,0,0,0,0,0,2.7803014970059885
106,0,intermediate,0,0,0,0,True,True,69.3,0.95,0,2511,"[{""question"":""Is your solution exact or approximate?"",""answer"":""""},{""question"":""How did you estimate the area under the curve?"",""answer"":""k""}]",835467,30,20,785,14,0,6,78,44,230.15289437425344,3.713204624272724,12.96851959635544,0.209229464900205,19,0,0,0,0,19.725779865276174,1.2530205528007698,1753,java,0,0,0,0,0,2.7803014970059885
106,11,intermediate,4,0,0,0,True,True,69.39999999999999,1,FAILED,2304,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""""},{""question"":""Describe in words the algorithm you developed."",""answer"":""Greedy algo should be used""}]",835649,0,64,1354,28,23,28,124,74,607.7052523431596,10.99731228503575,34.24261726209262,0.6196700687318443,35,9,2,2,2,9.814197684323577,0.5068099377141393,1579,0,18.75,0,0,0,4.6875,2.7421751655629136
107,1,easy,2,0,0,0,True,True,68.5,0,ACCEPTABLE,2788,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Some answer""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Second answer""}]",835302,0,1,91,0,0,0,7,6,13.508594365704894,0.2704978756887546,0.7611743107865871,0.015241854816467419,13,3,2,0,0,9.802237428258174,0,1940,java,37.5,0,0,0,18.75,3.2890520644511585
107,1,easy,2,0,0,0,True,True,67.2,0.4,ACCEPTABLE,2772,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""By testing""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""No""}]",835447,0,3,325,2,0,0,15,14,20.473706106069148,0.5075172355468077,1.1536403205724015,0.028597281961504614,13,3,2,0,0,9.852895671650288,0,1928,java,37.5,0,0,0,18.75,3.287327318548388
108,14,difficult,0,0,0,0,True,True,73.5,0.5666666666666667,FAILED,3249,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""bankruptcy""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""""}]",732236,0,0,19,0,0,0,1,1,5.766097044392294,0,0.3249046366242607,0,20,9,7,0,0,5.289127816164673,0,2799,py,0,0,0,0,0,1.670009405940594
109,8,easy,1,1,0,1,True,True,68.40000000000002,1,FAILED,3713,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""Memory leakage""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""Avoided the objection creation in loops.""}]",834251,6,22,12,12,2,4,10,5,83.8041778396522,4.324703623496183,4.722148402803511,0.24368584997475354,51,11,6,1,2,5.813454533261839,0.17502887863500313,4575,java,100,0,0,0,33.333333333333336,2.2547988709677416
109,10,easy,6,0,0,0,True,True,73.7,0.9333333333333332,PASSED,3714,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Tested with few scenarios""}]",834252,0,14,288,3,0,0,16,14,41.34824395500301,1.462763967268459,2.329866471865356,0.08242296159663565,28,9,3,0,0,14.092975736179266,0.6230157347079087,4575,java,16.666666666666668,0,0,0,2.7777777777777786,2.2547988709677416
109,2,intermediate,0,0,0,0,True,False,69.39999999999999,1,0,3715,"[{""question"":""the classes you used in the standard library and why"",""answer"":""Java8 provided support to ZonedDateTime class, this should provide us the default implementation.""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""""}]",834253,0,2,82,2,1,1,9,6,56.29325600414271,0.7530065391623258,3.1719791993806266,0.042429968503593325,14,0,0,0,0,16.203998223966106,0,4575,java,0,0,0,0,0,2.2547988709677416
111,10,easy,0,0,0,0,True,False,71.1,1,0,3599,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""After compiling and""}]",832861,0,45,595,20,0,0,63,40,323.908469055033,4.513124906757558,18.251403441118725,0.2543029013526611,33,9,3,0,0,14.414686111220016,0.5518143089458689,4518,java,0,0,0,0,0,2.117481084840056
111,13,easy,0,0,0,0,True,False,67,1,0,3601,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""Is a Hamiltonian path that is a cycle. Determining whether such paths and cycles exist in graphs is the Hamiltonian path problem, which is NP-complete""},{""question"":""briefly describe what an edge weight is in your own words"",""answer"":""""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""""}]",832863,0,2,1015,0,1,2,35,22,161.59450505571732,1.1656964950767434,9.105431896375322,0.0656839788215878,47,0,0,0,0,13.41037742091119,0,4518,java,0,0,0,0,0,2.117481084840056
111,15,intermediate,0,0,0,0,True,False,71.8,0.95,0,3600,0,832862,0,20,705,17,0,2,62,40,308.4586326348807,0.8707383674554338,17.380845167585033,0.0490638521507447,27,4,3,0,0,12.552151208646245,0,4518,java,0,0,0,0,0,2.117481084840056
110,12,easy,8,0,0,0,True,True,62.8,1,FAILED,3458,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""mean of even length list is not an integer, but have some fraction part.""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""the solution should pass all the possible scenarios.""}]",811940,0,8,370,6,1,1,545,521,485.2656012405793,0.5230426713152556,27.34345999095832,0.029472100062543437,16,2,2,1,1,17.686986307945972,0.2621414491511002,4226,java,4.6875,0,0,0,0.5859375,1.1334100613496931
110,3,intermediate,5,0,0,0,True,True,63.9,1,FAILED,3460,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""I tried to analyze the code and produce the failure scenarios.""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""I tried to analyze the code and produce the failure scenarios.""},{""question"":""Describe the faults you found in words."",""answer"":""tried to implement builder class""}]",811942,0,20,120,12,6,10,86,81,115.98738897573747,5.6967801790101555,6.535589009000191,0.3209988107622385,39,10,6,3,5,28.52449651105207,1.6461775860155092,4226,java,8,0,0,0,1.6,1.1334100613496931
112,9,easy,0,0,0,0,True,False,63.3,1,0,3443,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""unable to run so not sure""}]",809718,0,3,363,0,0,2,47,26,204.26598625190638,1.4063484692888972,11.509859360139592,0.07924409437849678,21,5,2,0,1,7.795370190170843,0,4135,cs,0,0,0,0,0,1.3215050754458162
112,11,intermediate,0,0,0,0,True,False,60.6,1,0,3441,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""i wrote the logic but due to time, unable to submit""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""i wrote the logic but due to time, unable to submit""},{""question"":""Describe in words the algorithm you developed."",""answer"":""i wrote the logic but due to time, unable to submit""}]",809716,22,25,4510,0,0,7,186,121,311.04409807089974,9.058462348859988,17.526529449609267,0.5104208956547462,66,9,2,0,6,9.755878668458369,0,4135,cs,0,0,0,0,0,1.3215050754458162
113,1,easy,2,0,0,0,True,True,71.2,0.9,ACCEPTABLE,3829,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""The test case passed""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""No""}]",837376,0,6,135,4,0,0,13,9,81.32235470412202,0.4303722952963521,4.582304096020757,0.02425036435215726,13,3,2,0,0,13.068524687700592,0.116122822826578,4730,java,37.5,0,0,0,18.75,2.5108473239436617
114,10,easy,0,0,0,0,True,False,69.89999999999999,1,0,3426,0,808032,0,66,865,24,0,2,432,397,516.6165286949638,14.534051688957293,29.110003566964664,0.8189561754378302,32,11,3,0,0,15.546582419225945,0.7666624940834027,4230,java,0,0,0,0,0,1.6713891647855532
115,10,easy,6,0,0,0,True,True,68.7,1,FAILED,3431,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""by adding proper if else conditiond and executing tests""}]",808022,4,47,522,21,0,0,266,242,382.19213146743215,14.565124274410527,21.535536887268076,0.8207070351628634,22,8,3,0,0,15.831769463872607,0.6317063171709962,4233,java,2.777777777777777,0,0,0,0.4629629629629628,1.5270036734693877
115,2,intermediate,0,0,0,0,True,True,70.19999999999999,1,FAILED,3429,"[{""question"":""the classes you used in the standard library and why"",""answer"":""""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""www.timeanddate.com/time/change/uk/edinburgh?year\u003d2016""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""""}]",808020,0,6,61,6,3,3,45,41,101.30456259269968,2.8970391068975587,5.708249764816383,0.1632406515301766,13,2,2,1,1,18.248870886644927,0.7063664133164215,4233,java,0,0,0,0,0,1.5270036734693877
116,1,easy,2,0,0,0,True,True,69.8,0.9,ACCEPTABLE,3493,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Perfect review and testing""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""yes,i""}]",813128,0,2,303,0,0,0,53,32,124.37991087383377,0,7.008485884767133,0,19,4,2,0,0,7.161817316638057,0,4367,cs,37.5,0,0,0,18.75,1.6579656716417908
116,3,intermediate,0,0,0,0,True,False,67.30000000000001,1,0,3494,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""More concise and clearer""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""""},{""question"":""Describe the faults you found in words."",""answer"":""The method is not included when executed""}]",813129,2,19,1775,13,0,2,74,55,209.98956002440818,5.432350129429742,11.83236792051066,0.30609886223379423,83,2,2,0,2,23.00553937513093,1.2879812771004642,4367,cs,0,0,0,0,0,1.6579656716417908